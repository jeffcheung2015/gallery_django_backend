{"version":3,"sources":["Reducer/RootReducer.jsx","Reducer/ReducerType.js","Reducer/User/UserReducer.js","Reducer/UI/UIReducer.js","Reducer/API/APIReducer.js","Reducer/StoreConfig.jsx","Services/Interceptor.js","Services/Auth.js","Utils/Config/constants.js","Reducer/User/UserActions.js","View/Layout/SideDrawer/index.js","View/Layout/GlobalHeader/index.js","View/Layout/GlobalFooter/index.js","Reducer/UI/UIActions.js","View/User/LoginPage/index.js","Utils/UtilFunctions.js","View/User/SignupPage/index.js","Services/API.js","Reducer/API/APIActions.js","View/User/ProfilePage/index.js","View/Gallery/UploadPage/index.js","View/Gallery/HomePage/index.js","Router/index.js","Components/LoaderDisplay/index.js","View/Layout/index.js","App.js","serviceWorker.js","index.js"],"names":["history","UI_START_LOADING","UI_STOP_LOADING","initState","isLogin","userDtlFetched","lastRespMsg","access","refresh","userId","userDetail","username","email","createdAt","lastLoginAt","userProfile","avatar","lastProfileEdit","noOfImgs","activity","userReducer","state","arguments","length","undefined","action","type","_assign","profile","isLoading","isReadyRedirect","uiReducer","data","imgCount","numPages","currPage","tags","apiReducer","logger","createLogger","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createBrowserHistory","store","createStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunk","axiosCreate","axios","create","baseURL","timeout","interceptors","request","use","req","console","log","response","resp","verifyToken","url","method","token","getUser","headers","Authorization","updateUserAxios","Content-Type","updateAvatarAxios","routeName","respCodes","respCodeToMsg","00000","99999","99998","00001","00002","00003","00004","00005","00006","00007","00011","00012","00013","userSignup","password","recaptchaToken","callbackObj","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","isSuccessSignup","respCode","wrap","_context","prev","next","sent","resp_code","t0","error","onSuccess","onFail","stop","_x","apply","this","userLogin","_ref2","_callee2","isSuccessLogin","respData","decoded","_resp$data","_context2","localStorage","setItem","jwt","decode","user_id","date_joined","last_login","last_edit","noOfPosts","no_of_posts","no_of_imgs","_x2","verifyJWTToken","_ref3","_callee3","isSuccessVerify","newAccess","accessResp","refreshResp","tmpAccess","_context3","t1","_x3","getAuthUser","_ref4","_callee4","isSuccessGettingUser","_context4","_x4","updateAvatar","formData","_ref5","_callee5","isSuccessUpdateAvatar","_context5","_x5","updateUser","_ref6","_callee6","isSuccessUpdateUser","_context6","_x6","userLogout","_ref7","_callee7","_context7","clear","_x7","SideDrawer","_this$props","props","classes","isDrawerOpen","handleDrawerAction","react_default","createElement","Fragment","className","onClick","Drawer","drawer","variant","anchor","open","paper","drawerPaper","drawerHeader","Avatar","Divider","List","React","Component","connect","withStyles","theme","width","flexShrink","zIndex","display","alignItems","padding","minHeight","justifyContent","background","GlobalHeader","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isMenuOpen","handleMenuClose","bind","assertThisInitialized","redirect","logout","setState","path","push","_this2","location","pathname","createMuiTheme","overrides","MuiTooltip","popper","tooltip","color","View_Layout_SideDrawer","MuiThemeProvider","AppBar","appBarShift","appBar","Toolbar","toolbar","IconButton","edge","iconButtonMenu","Menu_default","iconButton","Tooltip","title","Home_default","Typography","globalHeaderTitle","noWrap","grow","headerIcons","Person_default","PersonAdd_default","AddPhotoAlternate_default","AccountCircle_default","ExitToApp_default","withRouter","bindActionCreators","transition","concat","marginLeft","marginRight","inputInput","margin","flexGrow","GlobalFooter","startLoading","stopLoading","LoginPage","capchaRef","onLoadRecaptcha","verifyCallback","onFormSubmit","onFormValidate","handleSnackBar","msg","enqueueSnackbar","reset","formVals","submitErrorObj","_isEmpty","val","errorObj","_forEach","e","_this3","react_final_form_es","onSubmit","validate","render","handleSubmit","submitting","Paper","loginPaper","Grid","container","item","xs","loginLabel","Lock_default","loginLabelIcon","fullWidth","required","name","input","meta","TextField","label","onChange","textField","submitFailed","InputProps","startAdornment","InputAdornment","position","dirty","submitError","modified","VpnKey_default","dist","ref","el","size","data-theme","sitekey","onloadCallback","Button","loginButton","disabled","marginBottom","fontSize","fontWeight","textAlign","height","withSnackbar","isValidEmail","test","String","toLowerCase","SignupPage","confirmPassword","pristine","signupPaper","signupLabel","signupLabelIcon","ContactMail_default","signupButton","upsertImageAxios","getImageAxios","page","imgPerPage","queryStr","reqUrl","and","tagsStr","tag","idx","upsertImage","isSuccessUpsertImg","getImages","isSuccessGettingImage","img_count","num_pages","curr_page","getTags","isSuccessGettingTags","ProfilePage","rightCardTab","avatarFile","updatedAvatar","profileUpdateOpen","avatarUpdateOpen","imgUpdateOpen","currImgId","currImgSrc","currImgName","currImgDesc","currImgCreatedAt","currTags","onDrop","onUpdateProfile","onUpdateAvatar","handleModalClose","handleModalOpen","onPageChange","onInputChange","onDropdownChange","onClickUpdateImage","changeRightTabContent","getItem","shouldLogout","FormData","append","Date","getTime","target","value","tmpInputObj","modalType","newStateObj","imgSrc","dataElem","id","image_name","image_desc","created_at","retypePassword","file","_this4","reader","FileReader","onabort","onerror","onload","result","readAsDataURL","contentType","activePage","_this5","_this$props2","_this$state3","endDate","startDate","setDate","getDate","dateCountList","Array","dateIdx","date","count","_range","tagsOptions","_map","key","text","Card","leftCard","CardActionArea","Modal","dimmer","onClose","trigger","Image","src","wrapped","Header","Content","image","Description","updateAvatarArea","dist_es","multiple","getRootProps","getInputProps","Button_Button","CardContent","leftCardContent","Label","Icon","moment","format","Grid_Grid","react_loaders_default","active","rightCard","Group","labeled","icon","content","Divider_Divider","horizontal","as","Pagination","defaultActivePage","ellipsisItem","firstItem","lastItem","prevItem","nextItem","totalPages","columns","elem","image_file","Column","react_calendar_heatmap_umd_default","values","classForValue","showWeekdayLabels","gutterSize","tooltipDataAttrs","tmpDate","data-tip","toGMTString","split","slice","react_tooltip_dist_default","multiline","Input","iconPosition","placeholder","Dropdown","renderLabel","search","selection","options","paddingLeft","UploadPage","files","imgNames","imgDescs","modifiedTags","acceptedFiles","fileList","prevList","i","prevs","fill","preventDefault","isUploadSuccess","dataNameArray","parseInt","eVal","eName","_this$state2","eNameArray","encType","uploadCard","cardActionArea","AddPhotoIcon","pendingUpload","HomePage","selectedTags","isContentLoading","imgPreviewOpen","searchVal","onPerPageChange","onClickLabel","handleContentLoading","onClickClearTags","onImageClick","handleSearchChange","_this$setState","defineProperty","dropdownObj","selectTarget","selectedTagsCpy","tmpSelectedTags","searchObj","setTimeout","_this$state7","cardIdxToColor","Table","basic","celled","collapsing","Body","Row","Cell","Search","onSearchChange","_debounce","leading","showNoResults","loading","Select","Card_Card","minCharacters","nonUsed","padded","gridList","subheader","PrivateRoute","component","rest","objectWithoutProperties","react_router","assign","to","from","PublicRoute","Router","exact","Router_PublicRoute","Router_PrivateRoute","pure","Layout","View_Layout_GlobalHeader","src_Components_LoaderDisplay","src_Router","View_Layout_GlobalFooter","App","loadReCaptcha","es","esm","build","maxSnack","dense","preventDuplicate","autoHideDuration","anchorOrigin","vertical","src_View_Layout","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2cd11ffa.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\n// All Reducers\nimport { userReducer } from \"Reducer/User/UserReducer\";\nimport { uiReducer } from \"Reducer/UI/UIReducer\";\nimport { apiReducer } from \"Reducer/API/APIReducer\";\n\nexport const rootReducer = (history) => combineReducers({\n  router: connectRouter(history),\n  userReducer,\n  uiReducer,\n  apiReducer\n});\n","export const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\nexport const USER_REFRESH_TOKEN_SUCCESS = \"USER_REFRESH_TOKEN_SUCCESS\"\nexport const USER_REFRESH_TOKEN_FAIL = \"USER_REFRESH_TOKEN_FAIL\"\nexport const USER_SIGNUP_FAIL = \"USER_SIGNUP_FAIL\"\nexport const USER_SIGNUP_SUCCESS = \"USER_SIGNUP_SUCCESS\"\nexport const USER_VERIFY_TOKEN_SUCCESS = \"USER_VERIFY_TOKEN_SUCCESS\"\nexport const USER_VERIFY_TOKEN_FAIL = \"USER_VERIFY_TOKEN_FAIL\"\nexport const GET_USER_SUCCESS = \"GET_USER_SUCCESS\"\nexport const GET_USER_FAIL = \"GET_USER_FAIL\"\nexport const UPDATE_AVATAR_SUCCESS = \"UPDATE_AVATAR_SUCCESS\"\nexport const UPDATE_AVATAR_FAIL = \"UPDATE_AVATAR_FAIL\"\nexport const UPDATE_USER_SUCCESS = \"UPDATE_USER_SUCCESS\"\nexport const UPDATE_USER_FAIL = \"UPDATE_USER_FAIL\"\nexport const USER_LOGOUT = \"USER_LOGOUT\"\n\n\nexport const UI_START_LOADING = \"UI_START_LOADING\"\nexport const UI_STOP_LOADING = \"UI_STOP_LOADING\"\nexport const UI_IS_READY_REDIRECT = \"UI_IS_READY_REDIRECT\"\nexport const UI_RESET_READY_REDIRECT = \"UI_RESET_READY_REDIRECT\"\n\nexport const API_UPLOAD_SUCCESS = \"API_UPLOAD_SUCCESS\"\nexport const API_UPLOAD_FAIL = \"API_UPLOAD_FAIL\"\nexport const API_GET_IMAGE_SUCCESS = \"API_GET_IMAGE_SUCCESS\"\nexport const API_GET_IMAGE_FAIL = \"API_GET_IMAGE_FAIL\"\nexport const API_GET_TAGS_SUCCESS = \"API_GET_TAGS_SUCCESS\"\nexport const API_GET_TAGS_FAIL = \"API_GET_TAGS_FAIL\"\n","import _assign from \"lodash/assign\";\nimport * as type from 'Reducer/ReducerType';\n\nconst initState = {\n  isLogin: false,\n  userDtlFetched: false,\n  lastRespMsg: \"\",\n  access: \"\",\n  refresh: \"\",\n  userId: -1,\n  userDetail:{\n    username: \"\",\n    email: \"\",\n    createdAt: \"\",\n    lastLoginAt: \"\"\n  },\n  userProfile:{\n    avatar: \"\",\n    lastProfileEdit: \"\",\n    noOfImgs: 0,\n    activity: []\n  }\n}\n\nexport const userReducer = (state = initState, action) => {\n  switch (action.type) {\n    case type.USER_LOGIN_SUCCESS:\n      return _assign({}, state, {\n        lastRespMsg: action.lastRespMsg,\n        isLogin: true,\n        access: action.access,\n        refresh: action.refresh,\n        userId: action.userId,\n        userDetail: action.userDetail,\n        userDtlFetched: true,\n        userProfile: action.userProfile\n      });\n    case type.USER_LOGIN_FAIL:\n      return _assign({}, state, {\n        lastRespMsg: action.lastRespMsg,\n        isLogin: false,\n        access: \"\",\n        refresh: \"\",\n        userId: -1,\n        userDetail: {},\n        userDtlFetched: false,\n        userProfile: {}\n      });\n    case type.USER_VERIFY_TOKEN_SUCCESS:\n      return _assign({}, state, {\n        lastRespMsg: action.lastRespMsg,\n        userId: action.userId,\n        isLogin: true,\n        access: action.access,\n        refresh: action.refresh,\n      });\n    case type.USER_VERIFY_TOKEN_FAIL:\n      return _assign({}, state, {\n        lastRespMsg: action.lastRespMsg,\n        isLogin: false,\n        userId: -1,\n        access: \"\",\n        refresh: \"\",\n        userDetail: {},\n        userDtlFetched: false,\n        userProfile: {}\n      });\n    case type.USER_SIGNUP_SUCCESS:\n      return _assign({}, state, {\n        lastRespMsg: action.lastRespMsg,\n      });\n    case type.USER_SIGNUP_FAIL:\n      return _assign({}, state, {\n        lastRespMsg: action.lastRespMsg,\n      });\n    case type.GET_USER_SUCCESS:\n      return _assign({}, state, {\n        lastRespMsg: action.lastRespMsg,\n        userDetail: action.userDetail,\n        userDtlFetched: true,\n        userProfile: action.profile\n      });\n    case type.GET_USER_FAIL:\n      return _assign({}, state, {\n        lastRespMsg: action.lastRespMsg,\n        userDetail: {},\n        userId: -1,\n        userDtlFetched: false,\n        userProfile: {}\n      });\n    case type.UPDATE_AVATAR_SUCCESS:\n      return _assign({}, state, {\n        lastRespMsg: action.lastRespMsg,\n\n      });\n    case type.UPDATE_AVATAR_FAIL:\n      return _assign({}, state, {\n        lastRespMsg: action.lastRespMsg,\n\n      });\n    case type.UPDATE_USER_SUCCESS:\n      return _assign({}, state, {\n        lastRespMsg: action.lastRespMsg,\n\n      });\n    case type.UPDATE_USER_FAIL:\n      return _assign({}, state, {\n        lastRespMsg: action.lastRespMsg,\n\n      });\n    case type.USER_LOGOUT:\n      return _assign({}, state, {\n        lastRespMsg: action.lastRespMsg,\n        isLogin: false,\n        access: \"\",\n        refresh: \"\",\n        userId: -1,\n        userDetail: {},\n        userDtlFetched: false,\n        userProfile: {}\n      });\n    default:\n      return state;\n  }\n}\n","import _assign from \"lodash/assign\";\nimport * as type from 'Reducer/ReducerType';\n\nconst initState = {\n  isLoading: true,\n  isReadyRedirect: false\n\n}\n\nexport const uiReducer = (state = initState, action) => {\n  switch(action.type){\n    case type.UI_START_LOADING:\n      return _assign({}, state, {\n        isLoading: true\n      });\n    case type.UI_STOP_LOADING:\n      return _assign({}, state, {\n        isLoading: false\n      });\n    default:\n      return state;\n  }\n}\n","import _assign from \"lodash/assign\";\nimport * as type from 'Reducer/ReducerType';\n\nconst initState = {\n  lastRespMsg: \"00000\",\n  data: null,\n  imgCount: -1,\n  numPages: -1,\n  currPage: -1,\n  tags:[],\n}\n\nexport const apiReducer = (state = initState, action) => {\n  switch(action.type){\n      case type.API_UPLOAD_SUCCESS:\n        return _assign({}, state, {\n          lastRespMsg: action.lastRespMsg,\n\n        });\n      case type.API_UPLOAD_FAIL:\n        return _assign({}, state, {\n          lastRespMsg: action.lastRespMsg,\n\n        });\n      case type.API_GET_IMAGE_SUCCESS:\n        return _assign({}, state, {\n          lastRespMsg: action.lastRespMsg,\n          data: action.data,\n          imgCount: action.imgCount,\n          numPages: action.numPages,\n          currPage: action.currPage,\n        });\n      case type.API_GET_IMAGE_FAIL:\n        return _assign({}, state, {\n          lastRespMsg: action.lastRespMsg,\n        });\n      case type.API_GET_TAGS_SUCCESS:\n        return _assign({}, state, {\n          lastRespMsg: action.lastRespMsg,\n          tags: action.tags,\n        });\n      case type.API_GET_TAGS_FAIL:\n        return _assign({}, state, {\n          lastRespMsg: action.lastRespMsg,\n          tags: []\n        });\n      default:\n        return state;\n  }\n}\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { rootReducer } from \"./RootReducer\";\nimport thunk from 'redux-thunk';\nimport { createBrowserHistory } from 'history';\nimport { routerMiddleware } from 'connected-react-router';\nconst logger = createLogger({});\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const history = createBrowserHistory();\n\nexport const store = createStore(\n  rootReducer(history),\n  composeEnhancer(\n    applyMiddleware(\n      routerMiddleware(history),\n    ),\n    applyMiddleware(thunk),\n    applyMiddleware(logger)\n  )\n);\n","import axios from 'axios'\n\nconst axiosCreate = axios.create({\n  baseURL: \"http://localhost:8000\",\n  timeout: 30000,\n});\n\naxiosCreate.interceptors.request.use(\n  req => {\n    console.log(\">>> Interceptor.req :\", req)\n    return req;\n  }\n  // ,\n  // error => {\n  //   console.log(\">>> Interceptor.req.error :\", error)\n  //   Promise.reject(error);\n  // }\n);\n\naxiosCreate.interceptors.response.use(\n  resp => {\n    console.log(\">>> Interceptor.resp: \" , resp)\n    return resp\n  }\n  // ,\n  // error => {\n  //   console.log(\">>> Interceptor.resp.error: \", error)\n  //\n  //   return Promise.reject(error)\n  // }\n);\n\nexport default axiosCreate;\n","import axiosCreate from 'Services/Interceptor';\n\nexport function signup(data) {\n  return axiosCreate({\n    url: '/api/signup',\n    method: 'POST',\n    data,\n  });\n};\n\nexport function login(data) {\n  return axiosCreate({\n    url: '/api/login',\n    method: 'POST',\n    data,\n  });\n};\n\nexport function refreshToken(data){\n  return axiosCreate({\n    url: '/api/token/refresh/',\n    method: 'POST',\n    data,\n  });\n}\n\nexport function verifyToken(access) {\n  return axiosCreate({\n    url: '/api/token/verify/',\n    method: 'POST',\n    data:{\n      token: access\n    },\n  });\n};\n\nexport function logout() {\n  return axiosCreate({\n    url: '/api/logout',\n    method: 'GET',\n  });\n};\n\nexport function getUser(access) {\n  return axiosCreate({\n    url: '/api/getuser',\n    method: 'POST',\n    headers: {'Authorization': \"Bearer \" + access},\n  });\n};\n\nexport function updateUserAxios(data, access) {\n  return axiosCreate({\n    url: '/api/updateuser',\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      'Authorization': \"Bearer \" + access\n    },\n    data\n  });\n};\n\nexport function updateAvatarAxios(data, access) {\n  return axiosCreate({\n    url: '/api/updateavatar',\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      'Authorization': \"Bearer \" + access\n    },\n    data\n  });\n};\n","export const BASE_URL = \"http://localhost:8000\"\nexport const routeName = {\n  HOME : \"/\",\n  LOGIN : \"/login\",\n  SIGNUP : \"/signup\",\n  PROFILE : \"/profile\",\n  UPLOAD : \"/upload\"\n}\n\nexport const urlPathToTitle = {\n  \"/\" : \"Gallery\",\n  \"/login\" : \"Login\",\n  \"/signup\" : \"Sign up\",\n  \"/profile\" : \"Profile\",\n  \"/upload\" : \"Upload\"\n}\nexport const respCodes = {\n  SUCCESS_REQ: \"00000\",\n  UNEXPECTED_SERVER_ERROR: \"99999\",\n  GOOGLE_RECAPTCHA_VERIFY_FAIL: \"99998\",\n  INVALID_INPUTS: \"00001\",\n  DUP_CRED: \"00002\",\n  USER_NOT_EXIST: \"00003\",\n  INVALID_CRED: \"00004\",\n  USERID_NOT_FOUND: \"00005\",\n  PASSWORD_LT_8: \"00006\",\n  SIGNUP_EMAIL_INVALID: \"00007\",\n  UPLOAD_FAIL: \"00011\",\n  NO_USER_OWNED_IMAGE: \"00012\",\n  DELETE_IMAGE_FAIL: \"00013\"\n}\n\nexport const respCodeToMsg = {\n  \"00000\": \"Successful Request\",\n  \"99999\": \"Unexpected server error occurs\",\n  \"99998\": \"Google recaptcha verification failed\",\n  \"00001\": \"Some user input fields are invalid\",\n  \"00002\": \"Username or email are duplicated\",\n  \"00003\": \"User doesn't exist\",\n  \"00004\": \"User password is incorrect\",\n  \"00005\": \"User Id not found\",\n  \"00006\": \"User password must be greater than 8\",\n  \"00007\": \"Invalid email address\",\n  \"00011\": \"Image name or image descriptions are empty or unexpected upload error.\",\n  \"00012\": \"No images owned by that user.\",\n  \"00013\": \"Delete image fail unexpectedly.\"\n}\n","import * as type from 'Reducer/ReducerType';\nimport { signup, login, refreshToken, verifyToken,\n   logout, getUser, updateUserAxios, updateAvatarAxios } from \"Services/Auth\";\nimport jwt from 'jsonwebtoken';\nimport { respCodes } from 'Utils/Config/constants'\n\nexport const userSignup = (username, password, email, recaptchaToken, callbackObj) =>{\n  return async(dispatch) => {\n    var isSuccessSignup = false\n    var respCode = \"99999\"\n    try{\n      const resp = await signup({\n        username,\n        password,\n        email,\n        recaptchaToken,\n      });\n      console.log(\">>> userSignup resp:\" , resp)\n      respCode = resp.data.resp_code\n      isSuccessSignup = respCode === respCodes.SUCCESS_REQ\n    }catch(error){\n      console.error(\">>> userSignup, error:\", error)\n    }\n\n    if (isSuccessSignup){\n      callbackObj.onSuccess()\n      dispatch({\n        lastRespMsg: respCode,\n        type: type.USER_SIGNUP_SUCCESS,\n      })\n    }else{\n      callbackObj.onFail(respCode)\n      dispatch({\n        lastRespMsg: respCode,\n        type: type.USER_SIGNUP_FAIL,\n      })\n    }\n  }\n}\nexport const userLogin = (username, password, recaptchaToken, callbackObj) => {\n  return async (dispatch) => {\n    var isSuccessLogin = false\n    var respCode = \"99999\"\n    var respData = {}\n    var decoded = {}\n    try{\n      const resp = await login ({\n        username,\n        password,\n        recaptchaToken\n      });\n      console.log(\">>> userLogin resp:\", resp)\n      const { access, refresh } = resp.data;\n      respData = resp.data\n      respCode = resp.data.resp_code\n      localStorage.setItem(\"access\", access)\n      localStorage.setItem(\"refresh\", refresh)\n\n      decoded = jwt.decode(access)\n      console.log(\">>> userLogin decoded:\", decoded)\n      isSuccessLogin = respCode === respCodes.SUCCESS_REQ\n    }catch(error){\n      console.log(\">>> userLogin, error:\", error)\n    }\n\n    if(isSuccessLogin){\n      callbackObj.onSuccess()\n      dispatch({\n        lastRespMsg: respCode,\n        type: type.USER_LOGIN_SUCCESS,\n        userId: decoded.user_id,\n        access: respData.access,\n        refresh: respData.refresh,\n        userDetail:{\n          username: respData.username,\n          email: respData.email,\n          createdAt: respData.date_joined,\n          lastLoginAt: respData.last_login\n        },\n        userProfile:{\n          avatar: respData.avatar,\n          lastProfileEdit: respData.last_edit,\n          noOfPosts: respData.no_of_posts,\n          noOfImgs: respData.no_of_imgs\n        }\n      });\n    }else{\n      callbackObj.onFail(respCode)\n      dispatch({\n        lastRespMsg: respCode,\n        type: type.USER_LOGIN_FAIL,\n      })\n    }\n  }\n}\n\nexport const verifyJWTToken = (access, refresh) => {\n  return async (dispatch) => {\n    var isSuccessVerify = false\n    var newAccess = \"\";\n    if (access && refresh){\n      try{\n        const accessResp = await verifyToken(access);\n        console.log(\">>> verifyJWTToken accessResp:\", accessResp)\n        isSuccessVerify = true\n      }catch(error){\n        console.error(\">>> verifyJWTToken access token invalid:\", error)\n        try{\n          const refreshResp = await verifyToken(refresh);\n          console.log(\">>> verifyJWTToken refreshResp: \", refreshResp)\n          const resp = await refreshToken({refresh})\n          console.log(\">>> refreshToken resp: \", resp)\n          newAccess = resp.data.access;\n          localStorage.setItem(\"access\", newAccess)\n          isSuccessVerify = true\n        }catch(error){\n          console.error(\">>> verifyJWTToken refresh token invalid:\", error)\n        }\n      }\n    }\n    // invalid jwt token issue occurs\n    if(isSuccessVerify) {\n      // have to manually do it as integreting the resp_msg into verify api in backend is too tedious\n      var tmpAccess = newAccess || access\n      let decoded = jwt.decode(tmpAccess)\n      console.log(\">>> verifyJWTToken decode jwt:\", decoded)\n      dispatch({\n        lastRespMsg: \"00000\",\n        type: type.USER_VERIFY_TOKEN_SUCCESS,\n        userId: decoded.user_id,\n        access: tmpAccess,\n      });\n    } else {\n      dispatch({\n        lastRespMsg: \"99999\",\n        type: type.USER_VERIFY_TOKEN_FAIL,\n      });\n    }\n  }\n}\n\nexport const getAuthUser = (access) => {\n\n  return async (dispatch) => {\n    var isSuccessGettingUser = false\n    var respCode = \"99999\"\n    var respData = {}\n    try{\n      const resp = await getUser(access);\n      respData = resp.data\n      respCode = resp.data.resp_code\n      console.log(\">>> getAuthUser: \", resp.data)\n      isSuccessGettingUser = respCode === respCodes.SUCCESS_REQ\n    }catch(error){\n      console.error(\">>> getAuthUser, error:\", error)\n    }\n\n    if(isSuccessGettingUser){\n      dispatch({\n        lastRespMsg: respCode,\n        type: type.GET_USER_SUCCESS,\n        userDetail: {\n          username: respData.username,\n          email: respData.email,\n          createdAt: respData.date_joined,\n          lastLoginAt: respData.last_login,\n        },\n        profile: {\n          avatar: respData.avatar,\n          lastProfileEdit: respData.last_edit,\n          noOfImgs: respData.no_of_imgs,\n          activity: respData.activity\n        }\n      });\n    }else{\n      dispatch({\n        lastRespMsg: respCode,\n        type: type.GET_USER_FAIL,\n      });\n    }\n  }\n}\n\nexport const updateAvatar = (formData, access, callbackObj) =>{\n  return async(dispatch) => {\n    var isSuccessUpdateAvatar = false\n    var respCode = \"99999\"\n    var respData = {}\n    try{\n      const resp = await updateAvatarAxios(formData, access)\n\n      respCode = resp.data.resp_code\n      isSuccessUpdateAvatar = resp.data.resp_code === respCodes.SUCCESS_REQ\n\n    }catch(error){\n      console.log(\">>> APIActions.updateAvatar.error:\", error)\n    }\n\n    if (isSuccessUpdateAvatar){\n      callbackObj.onSuccess()\n      dispatch({\n        lastRespMsg: respCode,\n        type: type.UPDATE_AVATAR_SUCCESS,\n      })\n    }else{\n      callbackObj.onFail(respCode)\n      dispatch({\n        lastRespMsg: respCode,\n        type: type.UPDATE_AVATAR_FAIL,\n      })\n    }\n  }\n}\n\nexport const updateUser = (formData, access, callbackObj) =>{\n  return async(dispatch) => {\n    var isSuccessUpdateUser = false\n    var respCode = \"99999\"\n    var respData = {}\n    try{\n      const resp = await updateUserAxios(formData, access)\n\n      respCode = resp.data.resp_code\n      isSuccessUpdateUser = respCode === respCodes.SUCCESS_REQ\n    }catch(error){\n      console.log(\">>> APIActions.updateUser.error:\", error)\n    }\n\n    if (isSuccessUpdateUser){\n      callbackObj.onSuccess()\n      dispatch({\n        lastRespMsg: respCode,\n        type: type.UPDATE_USER_SUCCESS,\n      })\n    }else{\n      callbackObj.onFail(respCode)\n      dispatch({\n        lastRespMsg: respCode,\n        type: type.UPDATE_USER_FAIL,\n      })\n    }\n  }\n}\n\nexport const userLogout = () => {\n\n  return async (dispatch) => {\n    const resp = await logout();\n\n    localStorage.clear()\n\n    dispatch({\n      lastRespMsg: resp.data.resp_code,\n      type: type.USER_LOGOUT,\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport { withStyles } from '@material-ui/styles';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Fab from '@material-ui/core/Fab';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\n\nimport \"./index.scss\";\n\nconst overrideStyles = theme => ({\n  avatar: {\n\n  },\n  drawer: {\n    width: 240,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: 240,\n    zIndex: 10011\n\n  },\n  drawerHeader: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    padding: '0 16px',\n    minHeight: '64px',\n    justifyContent: 'flex-start',\n    background: '#FFFFFF'\n  },\n});\n\nclass SideDrawer extends React.Component{\n\n  render(){\n    const {\n      classes, isDrawerOpen, handleDrawerAction, isLogin, isLoading, userDetail, userDtlFetched\n    } = this.props\n\n    return (!isLogin || isLoading || !userDtlFetched) ? (null) : (\n      <>\n        <div className={\"div-drawerCover \" + ((!isDrawerOpen) ? \"div-hidden\" : \"\")} onClick={handleDrawerAction}></div>\n        <div className=\"div-sideDrawer-wrapper\">\n\n          <Drawer\n            className={classes.drawer}\n            variant=\"persistent\"\n            anchor=\"left\"\n            open={isDrawerOpen}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n          >\n            <div className={classes.drawerHeader}>\n              <Avatar className={classes.avatar}>\n                {userDetail.username[0]}\n              </Avatar>\n              <span className=\"span-username\">{userDetail.username}</span>\n            </div>\n            <Divider />\n            <List>\n              \n            </List>\n\n          </Drawer>\n\n        </div>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      userDtlFetched: state.userReducer.userDtlFetched,\n      isLoading: state.uiReducer.isLoading,\n      isLogin: state.userReducer.isLogin,\n      userDetail: state.userReducer.userDetail\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(overrideStyles)(SideDrawer))\n","import React, { Component } from 'react';\nimport \"./index.scss\"\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Person from '@material-ui/icons/Person';\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport AddPhotoAlternate from '@material-ui/icons/AddPhotoAlternate';\nimport Home from '@material-ui/icons/Home';\nimport ExitToApp from '@material-ui/icons/ExitToApp';\nimport { userLogout } from \"Reducer/User/UserActions\";\nimport { bindActionCreators } from 'redux';\n\nimport { fade, createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/styles';\n\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport SideDrawer from 'View/Layout/SideDrawer';\n\nimport { routeName, urlPathToTitle } from 'Utils/Config/constants';\n\nconst drawerWidth = 240\n\nconst overrideStyles = (theme) => ({\n  appBar: {\n    zIndex: \"9999\",\n    transition: \"margin 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms,width 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms\",\n  },\n  appBarShift: {\n    zIndex: \"9999\",\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: \"margin 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms,width 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms\",\n  },\n  toolbar:{\n    minHeight: \"40px !important\",\n    background: 'linear-gradient(to right, #DFDFDF, #EFEFEF)'\n  },\n  iconButtonMenu:{\n    color: '#000000',\n    marginRight: \"20px\",\n  },\n  globalHeaderTitle:{\n    color: '#000000',\n    marginRight: '20px'\n  },\n  \n  inputInput: {\n    width: '100%',\n    margin: '1px 1px 1px 40px',\n    color:'#000000'\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  iconButton:{\n    color: \"#000000\"\n  },\n});\n\n\nclass GlobalHeader extends React.Component{\n\n  constructor(props){\n    super(props)\n    this.state = {\n      isMenuOpen: false,\n    }\n    this.handleMenuClose = this.handleMenuClose.bind(this)\n    this.redirect = this.redirect.bind(this)\n    this.logout = this.logout.bind(this)\n  }\n  handleMenuClose(){\n    this.setState({\n      isMenuOpen: !this.state.isMenuOpen\n    })\n  }\n\n  redirect(path){\n    this.props.history.push(path);\n  }\n\n  async logout(){\n    await this.props.userLogout();\n    this.redirect(\"\")\n  }\n\n  render(){\n    const {\n      classes, isDrawerOpen, handleDrawerAction, isLogin\n    } = this.props\n\n    const {\n      isMenuOpen\n    } = this.state\n    const pathRoute = urlPathToTitle[this.props.history.location.pathname]\n    // const headerTitle = (pathRoute) ? pathRoute : 'Gallery'\n    const headerTitle = ''\n    //for some reason material ui's tooltip doesnt allow manual update of the classes\n    const theme = createMuiTheme({\n      overrides: {\n        MuiTooltip: {\n          popper:{\n            zIndex: \"10002\",\n          },\n          tooltip: {\n            color: \"#FFFFFF\",\n            background: \"#0A0A0A\",\n          }\n        }\n      }\n    });\n    return(\n      <div className=\"div-globalHeader-wrapper\">\n        { isLogin && <SideDrawer\n          isDrawerOpen={isDrawerOpen}\n          handleDrawerAction={handleDrawerAction}\n        />}\n        <MuiThemeProvider theme={theme}>\n          <AppBar className={isDrawerOpen ? classes.appBarShift : classes.appBar}>\n            <Toolbar className={classes.toolbar}>\n              {isLogin && !isDrawerOpen &&\n                (<IconButton\n                  onClick={handleDrawerAction}\n                  edge=\"start\"\n                  className={classes.iconButtonMenu}>\n                  <MenuIcon />\n                </IconButton>)\n              }\n\n              <div className=\"div-leftPartIcons\">\n                <IconButton\n                  className={classes.iconButton}\n                  onClick={() => this.redirect('')}>\n                  <Tooltip title=\"Home\" classes={classes.tooltip}>\n                    <Home />\n                  </Tooltip>\n                </IconButton>\n              </div>\n\n              <Typography className={'Typography-gallery ' + classes.globalHeaderTitle} variant=\"h6\" noWrap>\n                Gallery\n              </Typography>\n\n              <div className={classes.grow} />\n\n\n              <div className=\"div-headerIcons\">\n                <div className={(!isLogin ? 'div-visitor ' : 'div-hidden ') + classes.headerIcons}>\n                    <IconButton\n                      className={classes.iconButton}\n                      onClick={() => this.redirect('login')}>\n                      <Tooltip title=\"Login\" classes={classes.tooltip}>\n                        <Person />\n                      </Tooltip>\n                    </IconButton>\n\n                    <IconButton\n                      className={classes.iconButton}\n                      onClick={() => this.redirect('signup')}>\n                      <Tooltip title=\"Sign up\" classes={classes.tooltip}>\n                        <PersonAdd />\n                      </Tooltip>\n                    </IconButton>\n                </div>\n                <div className={(isLogin ? 'div-member ' : 'div-hidden ') + classes.headerIcons}>\n                  <IconButton\n                    className={classes.iconButton}\n                    onClick={() => this.redirect(\"upload\")}>\n                    <Tooltip title=\"Upload\" classes={classes.tooltip}>\n                      <AddPhotoAlternate />\n                    </Tooltip>\n                  </IconButton>\n                  <IconButton\n                    className={classes.iconButton}\n                    onClick={() => this.redirect('profile')}>\n                    <Tooltip title=\"Profile\" classes={classes.tooltip}>\n                      <AccountCircle />\n                    </Tooltip>\n                  </IconButton>\n                  <IconButton\n                    edge=\"end\"\n                    className={classes.iconButton}\n                    onClick={this.logout}>\n                    <Tooltip title=\"Logout\" classes={classes.tooltip}>\n                      <ExitToApp />\n                    </Tooltip>\n                  </IconButton>\n                </div>\n              </div>\n            </Toolbar>\n          </AppBar>\n        </MuiThemeProvider>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLogin: state.userReducer.isLogin,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({userLogout}, dispatch)\n\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(overrideStyles)(GlobalHeader)))\n","import React, { Component } from 'react';\nimport \"./index.scss\"\n\n\nclass GlobalFooter extends React.Component{\n  render(){\n    return(\n      <div className=\"div-globalFooter-wrapper\">\n\n      </div>\n    )\n  }\n}\nexport default GlobalFooter;\n","import * as type from 'Reducer/ReducerType';\n\nexport function startLoading(){\n  return { type: type.UI_START_LOADING }\n}\n\nexport function stopLoading(){\n  return { type: type.UI_STOP_LOADING }\n}\n","import React, { Component } from 'react';\nimport \"./index.scss\"\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Lock from '@material-ui/icons/Lock';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport VpnKey from '@material-ui/icons/VpnKey';\nimport { ReCaptcha } from 'react-recaptcha-google';\nimport Grid from '@material-ui/core/Grid';\nimport { Form, Field } from 'react-final-form'\nimport { withStyles } from '@material-ui/styles';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { userLogin } from \"Reducer/User/UserActions\";\nimport { respCodes, respCodeToMsg } from \"Utils/Config/constants\";\nimport { startLoading, stopLoading } from \"Reducer/UI/UIActions\";\nimport _forEach from 'lodash/forEach';\nimport _isEmpty from 'lodash/isEmpty';\nimport { withSnackbar } from 'notistack';\n\n\nconst overrideStyles = () => ({\n  loginPaper:{\n    padding: '30px',\n    marginBottom: '30px'\n  },\n  loginLabel: {\n    fontSize: '26px',\n    fontWeight: '600',\n    textAlign: 'center',\n    padding: '30px',\n    background: '#a9a9a9'\n  },\n  loginLabelIcon: {\n    width: '80px',\n    height: '80px'\n  },\n  textField: {\n    width: '100%',\n    margin: '15px auto',\n  },\n  loginButton: {\n    width: '100%',\n    margin: '15px auto',\n    padding: '10px',\n    fontSize: '16px'\n  }\n})\nclass LoginPage extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n    }\n    this.capchaRef = null;\n    this.onLoadRecaptcha = this.onLoadRecaptcha.bind(this);\n    this.verifyCallback = this.verifyCallback.bind(this);\n\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onFormValidate = this.onFormValidate.bind(this);\n    this.redirect = this.redirect.bind(this);\n    this.handleSnackBar = this.handleSnackBar.bind(this);\n  }\n\n  redirect(path) {\n    this.props.history.push(path);\n  }\n\n  handleSnackBar(msg, variant){\n    this.props.enqueueSnackbar(msg, {variant})\n  }\n\n  componentDidMount() {\n    if (this.capchaRef) {\n        this.capchaRef.reset();\n        // this.capchaRef.execute();\n    }\n\n  }\n\n  onLoadRecaptcha() {\n      if (this.capchaRef) {\n          this.capchaRef.reset();\n      }\n  }\n\n  verifyCallback(recaptchaToken) {\n    // the recaptcha token from google after sending the request\n    console.log(recaptchaToken, \"<= your recaptcha token\")\n    this.state.recaptchaToken = recaptchaToken\n\n  }\n\n  async onFormSubmit(formVals){\n    console.log(\">>> onFormSubmit, formVals: \", formVals)\n    var submitErrorObj = {}\n    const { username, password } = formVals\n    if(!!!this.state.recaptchaToken){\n      submitErrorObj.recaptchaToken = \"Recaptcha verification needs to be done.\"\n      this.handleSnackBar(\"Recaptcha verification needs to be done.\", 'warning')\n    }\n    if(password.length < 8){\n      submitErrorObj.password = \"Password length must be greater than 8.\";\n    }\n    if (!_isEmpty(submitErrorObj)){\n      return submitErrorObj\n    }\n    console.log(respCodeToMsg[this.props.lastRespMsg])\n    this.props.startLoading()\n    await this.props.userLogin(username, password, this.state.recaptchaToken,\n      {\n        onSuccess: () => this.handleSnackBar(\"Login successfully.\", 'success'),\n        onFail: (resp_code) => {\n          this.handleSnackBar(respCodeToMsg[resp_code], 'error');\n          this.capchaRef.reset();\n        }\n      });\n    this.props.stopLoading()\n  }\n\n  componentDidUpdate(){\n    if(this.props.isLogin && this.props.userDtlFetched){\n      console.log(\"Login page component componentDidUpdate redirect to home page\")\n      this.redirect(\"\")\n    }\n  }\n\n  onFormValidate(val){\n    console.log('onFormValidate: ', val)\n    const errorObj = {};\n    _forEach(['username', 'password'], (e) => {\n      if(!val[e]){\n        errorObj[e] = 'Required field'\n      }\n    })\n    // TBD: reCaptcha\n    return errorObj;\n  }\n\n  render(){\n    const {\n      classes\n    } = this.props\n\n    return(\n      <div className=\"div-loginPage-wrapper\">\n        <Form\n          onSubmit={this.onFormSubmit}\n          validate={this.onFormValidate}\n          render={({handleSubmit, submitting}) => (\n          <form className=\"form-loginPage\" onSubmit={handleSubmit}>\n            <Paper className={classes.loginPaper}>\n              <Grid container>\n\n                <Grid item xs={12} className={classes.loginLabel}>\n                  <Lock className={classes.loginLabelIcon}/>\n                </Grid>\n                <Grid item xs={12}>\n                  <Field\n                    fullWidth\n                    required\n                    name=\"username\"\n                    type=\"text\"\n                    render={({input, meta}) => (\n                      <div>\n                        <TextField\n                          label=\"Username\"\n                          onChange={input.onChange}\n                          className={classes.textField}\n                          margin=\"normal\"\n                          error={meta.submitFailed && !!meta.error}\n                          variant=\"outlined\"\n                          InputProps={{\n                            startAdornment: (<InputAdornment position=\"start\"><AccountCircle /></InputAdornment>),\n                          }}\n                        />\n                        <span className=\"span-metaError\">\n                          {meta.dirty ? meta.submitError :\n                            meta.modified ? meta.error : \"\"}\n                        </span>\n                      </div>\n                    )}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Field\n                    fullWidth\n                    required\n                    name=\"password\"\n                    render={({input, meta})=>(\n                      <div>\n                        <TextField\n                          label=\"Password\"\n                          type=\"password\"\n                          onChange={input.onChange}\n                          className={classes.textField}\n                          margin=\"normal\"\n                          error={meta.submitFailed && !!meta.error}\n                          variant=\"outlined\"\n                          InputProps={{\n                            startAdornment: (<InputAdornment position=\"start\"><VpnKey /></InputAdornment>),\n                          }}\n                        />\n                        <span className=\"span-metaError\">\n                          {meta.dirty ? meta.submitError :\n                            meta.modified ? meta.error : \"\"}\n                        </span>\n                      </div>\n                    )}\n                  />\n                </Grid>\n\n                <Grid item xs={12} className=\"div-recaptcha-container\">\n                  <div className=\"div-reCaptcha-innerContainer\">\n                    <ReCaptcha\n\n                      ref={(el) => {this.capchaRef = el;}}\n                      size=\"normal\"\n                      data-theme=\"dark\"\n                      render=\"explicit\"\n                      sitekey=\"6LcpqLUUAAAAAO9A0zXVAModmR0QqaUEw2NGEzsI\"\n                      onloadCallback={this.onLoadRecaptcha}\n                      verifyCallback={this.verifyCallback}\n                    />\n                  </div>\n                </Grid>\n                <Grid item xs={12}>\n                  <Button className={classes.loginButton} variant=\"contained\" color=\"primary\" type=\"submit\" disabled={submitting}>Login</Button>\n                </Grid>\n              </Grid>\n\n            </Paper>\n          </form>)\n          }\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      userDtlFetched: state.userReducer.userDtlFetched,\n      access: state.userReducer.access,\n      lastRespMsg: state.userReducer.lastRespMsg,\n      isLogin: state.userReducer.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n      userLogin, startLoading, stopLoading }, dispatch)\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(overrideStyles)(withSnackbar(LoginPage))));\n","export function isValidEmail(email){\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n","import React, { Component } from 'react';\nimport \"./index.scss\"\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport PersonAdd from '@material-ui/icons/PersonAdd';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport ContactMail from '@material-ui/icons/ContactMail';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport VpnKey from '@material-ui/icons/VpnKey';\nimport { ReCaptcha } from 'react-recaptcha-google'\nimport Grid from '@material-ui/core/Grid';\nimport { Form, Field } from 'react-final-form'\nimport { isValidEmail } from 'Utils/UtilFunctions';\nimport { withStyles } from '@material-ui/styles';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { userSignup } from \"Reducer/User/UserActions\";\nimport { respCodes, respCodeToMsg } from \"Utils/Config/constants\";\nimport _forEach from 'lodash/forEach';\nimport _isEmpty from 'lodash/isEmpty';\nimport { withSnackbar } from 'notistack';\nimport { startLoading, stopLoading } from \"Reducer/UI/UIActions\";\n\nconst overrideStyles = () => ({\n  signupPaper:{\n    padding: '30px',\n    marginBottom: \"30px\"\n  },\n  signupLabel: {\n    fontSize: '26px',\n    fontWeight: '600',\n    textAlign: 'center',\n    padding: '30px',\n    background: '#a9a9a9'\n  },\n  signupLabelIcon: {\n    width: '80px',\n    height: '80px'\n  },\n  textField: {\n    width: '100%',\n    margin: '15px auto',\n  },\n  signupButton: {\n    width: '100%',\n    margin: '15px auto',\n    padding: '10px',\n    fontSize: '16px'\n  }\n})\nclass SignupPage extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n    }\n    this.capchaRef = null;\n    this.onLoadRecaptcha = this.onLoadRecaptcha.bind(this);\n    this.verifyCallback = this.verifyCallback.bind(this);\n\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.onFormValidate = this.onFormValidate.bind(this);\n    this.redirect = this.redirect.bind(this);\n  }\n\n  redirect(path) {\n    this.props.history.push(path);\n  }\n\n  handleSnackBar(msg, variant){\n    this.props.enqueueSnackbar(msg, {variant})\n  }\n\n  componentDidMount() {\n    if (this.capchaRef) {\n        this.capchaRef.reset();\n        // this.capchaRef.execute();\n    }\n  }\n\n  onLoadRecaptcha() {\n      if (this.capchaRef) {\n          this.capchaRef.reset();\n      }\n  }\n\n  verifyCallback(recaptchaToken) {\n    // the recaptcha token from google after sending the request\n    console.log(recaptchaToken, \"<= your recaptcha token\")\n    this.state.recaptchaToken = recaptchaToken\n  }\n\n\n\n  async onFormSubmit(formVals){\n    console.log(\">>> onFormSubmit: \", formVals)\n    var submitErrorObj = {}\n    const {password, confirmPassword, email, username} = formVals\n    if(!!!this.state.recaptchaToken){\n      submitErrorObj.recaptchaToken = \"Recaptcha verification needs to be done.\"\n      this.handleSnackBar(\"Recaptcha verification needs to be done.\", 'warning')\n    }\n    if (password != confirmPassword){\n      submitErrorObj.password = \"Password and Confirm Password field don't match.\";\n    }\n    if(password.length < 8){\n      submitErrorObj.password = \"Password length must be greater than 8.\";\n    }\n    if (!isValidEmail(email)){\n      submitErrorObj.email = \"Not a valid email.\"\n    }\n    if (!_isEmpty(submitErrorObj)){\n      return submitErrorObj\n    }\n    this.props.startLoading()\n    await this.props.userSignup(username, password, email, this.state.recaptchaToken, {\n      onSuccess: () => this.handleSnackBar(\"Sign up successfully.\", 'success'),\n      onFail: (resp_code) => {\n        this.handleSnackBar(respCodeToMsg[resp_code], 'error');\n        this.capchaRef.reset();\n      }\n    })\n    this.props.stopLoading()\n    if (this.props.lastRespMsg === respCodes.SUCCESS_REQ){\n      this.redirect(\"\")\n    }\n  }\n\n  onFormValidate(val){\n    console.log('onFormValidate: ', val)\n    const errorObj = {};\n    _forEach(['username', 'email', 'password', 'confirmPassword'], (e) => {\n      if(!val[e]){\n        errorObj[e] = 'Required field'\n      }\n    })\n\n    // TBD: reCaptcha\n    return errorObj;\n  }\n\n  componentDidUpdate(){\n    if(this.props.isLogin){\n      this.redirect(\"\")\n    }\n  }\n\n  render(){\n    const {\n      classes, lastRespMsg\n    } = this.props\n\n\n    return(\n      <div className=\"div-signupPage-wrapper\">\n        <Form\n          onSubmit={this.onFormSubmit}\n          validate={this.onFormValidate}\n          render={({handleSubmit, submitting, pristine}) => (\n          <form className=\"form-signupPage\" onSubmit={handleSubmit}>\n            <Paper className={classes.signupPaper}>\n              <Grid container>\n                <Grid item xs={12} className={classes.signupLabel}>\n                  <PersonAdd className={classes.signupLabelIcon}/>\n                </Grid>\n                <Grid item xs={12}>\n                  <Field fullWidth required name=\"username\" type=\"text\"\n                    render={({input, meta}) => (\n                      <div>\n                        <TextField label=\"Username\" onChange={input.onChange} className={classes.textField}\n                          margin=\"normal\" error={meta.submitFailed && !!meta.error} variant=\"outlined\"\n                          InputProps={{\n                            startAdornment: (<InputAdornment position=\"start\"><AccountCircle /></InputAdornment>),\n                          }}\n                        />\n                        <span className=\"span-metaError\">\n                          {meta.dirty ? meta.submitError :\n                            meta.modified ? meta.error : \"\"}\n                        </span>\n                      </div>\n                    )}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <Field fullWidth required name=\"email\" type=\"email\"\n                    render={({input, meta}) => (\n                      <div>\n                        <TextField label=\"Email\" onChange={input.onChange} className={classes.textField}\n                          margin=\"normal\" error={meta.submitFailed && !!meta.error} variant=\"outlined\"\n                          InputProps={{\n                            startAdornment: (<InputAdornment position=\"start\"><ContactMail /></InputAdornment>),\n                          }}\n                        />\n                        <span className=\"span-metaError\">\n                          {meta.dirty ? meta.submitError :\n                            meta.modified ? meta.error : \"\"}\n                        </span>\n                      </div>\n                    )}\n                  />\n                </Grid>\n\n                <Grid item xs={5}>\n                  <Field fullWidth required name=\"password\"\n                    render={({input, meta})=>(\n                      <div>\n                        <TextField label=\"Password\" type=\"password\" onChange={input.onChange} variant=\"outlined\"\n                          className={classes.textField} margin=\"normal\" error={meta.submitFailed && !!meta.error}\n                          InputProps={{\n                            startAdornment: (<InputAdornment position=\"start\"><VpnKey /></InputAdornment>),\n                          }}\n                        />\n                        <span className=\"span-metaError\">\n                          {meta.dirty ? meta.submitError :\n                            meta.modified ? meta.error : \"\"}\n                        </span>\n                      </div>\n                    )}\n                  />\n                </Grid>\n                <Grid item xs={2}></Grid>\n                <Grid item xs={5}>\n                  <Field fullWidth required name=\"confirmPassword\"\n                    render={({input, meta})=>(\n                      <div>\n                        <TextField label=\"Confirm Password\" type=\"password\" onChange={input.onChange} variant=\"outlined\"\n                          className={classes.textField} margin=\"normal\" error={meta.submitFailed && !!meta.error}\n                          InputProps={{\n                            startAdornment: (<InputAdornment position=\"start\"><VpnKey /></InputAdornment>),\n                          }}\n                        />\n                        <span className=\"span-metaError\">\n                          {meta.dirty ? meta.submitError :\n                            meta.modified ? meta.error : \"\"}\n                        </span>\n                      </div>\n                    )}\n                  />\n                </Grid>\n\n                <Grid item xs={8}>\n                  <div className=\"div-reCaptcha-container\">\n                    <ReCaptcha\n                      ref={(el) => {this.capchaRef = el;}}\n                      size=\"normal\"\n                      data-theme=\"dark\"\n                      render=\"explicit\"\n                      sitekey=\"6LcpqLUUAAAAAO9A0zXVAModmR0QqaUEw2NGEzsI\"\n                      onloadCallback={this.onLoadRecaptcha}\n                      verifyCallback={this.verifyCallback}\n                    />\n                  </div>\n                </Grid>\n\n                <Grid item xs={4}>\n                  <Button className={classes.signupButton} variant=\"contained\" color=\"primary\" type=\"submit\">Sign up</Button>\n                </Grid>\n\n              </Grid>\n            </Paper>\n          </form>\n        )}\n      />\n    </div>)\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLogin: state.userReducer.isLogin,\n    lastRespMsg: state.userReducer.lastRespMsg\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ userSignup, startLoading, stopLoading }, dispatch)\n};\n\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(overrideStyles)(withSnackbar(SignupPage))));\n","import axiosCreate from 'Services/Interceptor';\nimport _forEach from 'lodash/forEach';\n\nexport function upsertImageAxios(data, access) {\n  return axiosCreate({\n    url: '/api/upsert',\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      'Authorization': \"Bearer \" + access\n    },\n    data,\n  });\n};\n\n\nexport function getImageAxios(userId, page, imgPerPage, tags, queryStr=\"\") {\n  var reqUrl = (!!queryStr) ? `/api/searchimage/?` : `/api/getimage/?`\n  var and = ``\n  if (userId){ reqUrl += and + `userId=${userId}`; and = `&`}\n  if (page){ reqUrl += and + `page=${page}`; and = `&`}\n  if (imgPerPage){ reqUrl += and + `imgPerPage=${imgPerPage}`; and = `&`}\n  if (!!queryStr){ reqUrl += and + `searchTxt=${queryStr}`; and = `&`}\n  if (tags) {\n    var tagsStr = \"\"\n    _forEach(tags, (tag, idx) => {\n      tagsStr += and + `tags=${tag}`\n    })\n    reqUrl += tagsStr\n  }\n  return axiosCreate({\n    url: reqUrl,\n    method: 'GET',\n  });\n};\n\nexport function getTagsAxios() {\n  var reqUrl = `/api/gettags`\n\n  return axiosCreate({\n    url: reqUrl,\n    method: 'GET',\n  });\n};\n\nexport function getImageByUserIdAxios(access) {\n  var reqUrl = `/api/getuserimage`\n\n  return axiosCreate({\n    url: reqUrl,\n    method: 'GET',\n    headers: {\n      'Authorization': \"Bearer \" + access\n    },\n  });\n};\n","import * as type from 'Reducer/ReducerType';\nimport { upsertImageAxios, getImageAxios,\n   getTagsAxios } from \"Services/API\";\nimport { respCodes } from 'Utils/Config/constants'\n\nexport const upsertImage = (formData, access) =>{\n  return async(dispatch) => {\n    var respCode = \"99999\"\n    var isSuccessUpsertImg = false\n    try{\n      const resp = await upsertImageAxios(formData, access)\n      respCode = resp.data.resp_code\n      isSuccessUpsertImg = respCode === respCodes.SUCCESS_REQ\n    }catch(error){\n      console.log(\">>> APIActions.upsertImage.error:\", error)\n    }\n\n    if(isSuccessUpsertImg){\n      dispatch({\n        lastRespMsg: respCode,\n        type: type.API_UPLOAD_SUCCESS,\n      })\n    }else{\n      dispatch({\n        lastRespMsg: respCode,\n        type: type.API_UPLOAD_FAIL,\n      })\n    }\n\n  }\n}\n\nexport const getImages = (userId, currPage, imgPerPage, tags, queryStr) =>{\n  return async(dispatch) => {\n    var respCode = '99999'\n    var isSuccessGettingImage = false\n    var respData = {}\n    try{\n      console.log(`>>> APIActions.getImages: userId:${userId}, currPage:${currPage}, queryStr:${queryStr}`)\n      const resp = await getImageAxios(userId, currPage, imgPerPage, tags, queryStr)\n      respCode = resp.data.resp_code\n      respData = resp.data\n      isSuccessGettingImage = respCode === respCodes.SUCCESS_REQ\n    }catch(error){\n      console.log(\">>> APIActions.getImages.error:\", error)\n    }\n\n    if(isSuccessGettingImage){\n      dispatch({\n        lastRespMsg: respCode,\n        type: type.API_GET_IMAGE_SUCCESS,\n        data: respData.data,\n        imgCount: respData.img_count,\n        numPages: respData.num_pages,\n        currPage: respData.curr_page,\n      })\n    }else{\n      dispatch({\n        lastRespMsg: respCode,\n        type: type.API_GET_IMAGE_FAIL,\n      })\n    }\n  }\n}\n\nexport const getTags = () =>{\n  return async(dispatch) => {\n    var respCode = '99999'\n    var isSuccessGettingTags = false\n    var respData = {}\n    try{\n      console.log(`>>> APIActions.getTags`)\n      const resp = await getTagsAxios()\n      respCode = resp.data.resp_code\n      respData = resp.data\n      isSuccessGettingTags = respCode === respCodes.SUCCESS_REQ\n    }catch(error){\n      console.log(\">>> APIActions.getTags.error:\", error)\n    }\n\n    if(isSuccessGettingTags){\n      dispatch({\n        lastRespMsg: respCode,\n        type: type.API_GET_TAGS_SUCCESS,\n        tags: respData.tags\n      })\n    }else{\n      dispatch({\n        lastRespMsg: respCode,\n        type: type.API_GET_TAGS_FAIL,\n      })\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport \"./index.scss\"\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getAuthUser, verifyJWTToken, userLogout } from \"Reducer/User/UserActions\";\nimport { bindActionCreators } from 'redux';\nimport { withStyles } from '@material-ui/styles';\nimport ContactMail from '@material-ui/icons/ContactMail';\nimport DateRange from '@material-ui/icons/DateRange';\nimport Update from '@material-ui/icons/Update';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Loader from 'react-loaders'\nimport _isEmpty from 'lodash/isEmpty'\nimport { respCodes, respCodeToMsg } from \"Utils/Config/constants\";\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport moment from 'moment';\n// import { BASE_URL } from 'Utils/Config/constants';\nimport { Form, Field } from 'react-final-form'\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { Button, Header, Pagination, Icon, Image, Modal,\n   Label, Grid, Dropdown, Input, Divider } from 'semantic-ui-react'\nimport VpnKey from '@material-ui/icons/VpnKey';\nimport AddPhotoAlternate from '@material-ui/icons/AddPhotoAlternate';\nimport Dropzone from 'react-dropzone';\nimport { updateAvatar, updateUser } from 'Reducer/User/UserActions';\nimport { startLoading, stopLoading } from 'Reducer/UI/UIActions';\nimport { getImages, upsertImage, getTags } from 'Reducer/API/APIActions';\nimport _forEach from 'lodash/forEach';\nimport _map from 'lodash/map';\nimport _range from 'lodash/range';\nimport { withSnackbar } from 'notistack';\nimport { isValidEmail } from 'Utils/UtilFunctions';\nimport CalendarHeatmap from 'react-calendar-heatmap';\nimport ReactTooltip from 'react-tooltip';\n\nconst overrideStyles = (theme) => ({\n  leftCard:{\n    width: \"300px\",\n    minHeight: \"500px\"\n  },\n  leftCardContent:{\n    paddingLeft: \"0px\",\n\n  },\n  updateAvatarArea:{\n    height: '100%'\n  },\n  rightCard:{\n    width: \"600px\",\n    minHeight: \"550px\",\n    marginLeft: \"20px\"\n  },\n\n\n});\n\nclass ProfilePage extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      currPage: 1,\n      imgPerPage: '6',\n      rightCardTab: 'userActivity',\n      avatarFile: null,\n      updatedAvatar: null,\n      profileUpdateOpen: false,\n      avatarUpdateOpen: false,\n      imgUpdateOpen: false,\n      currImgId: -1,\n      currImgSrc: \"\",\n      currImgName: \"\",\n      currImgDesc: \"\",\n      currImgCreatedAt: \"\",\n      currTags: []\n    }\n    this.onDrop = this.onDrop.bind(this)\n    this.redirect = this.redirect.bind(this)\n    this.onUpdateProfile = this.onUpdateProfile.bind(this);\n    this.onUpdateAvatar = this.onUpdateAvatar.bind(this);\n    this.onFormValidate = this.onFormValidate.bind(this);\n    this.handleModalClose = this.handleModalClose.bind(this);\n    this.handleModalOpen = this.handleModalOpen.bind(this);\n    this.onPageChange = this.onPageChange.bind(this);\n    this.onInputChange = this.onInputChange.bind(this);\n    this.onDropdownChange = this.onDropdownChange.bind(this);\n    this.onClickUpdateImage = this.onClickUpdateImage.bind(this)\n    this.changeRightTabContent = this.changeRightTabContent.bind(this);\n  }\n  redirect(path){\n    this.props.history.push(path);\n  }\n\n  async componentDidMount(){\n    this.props.startLoading()\n    const access = localStorage.getItem(\"access\")\n    const refresh = localStorage.getItem(\"refresh\")\n    await this.props.verifyJWTToken(access, refresh)\n    //user restricted area, to avoid access without valid jwt token atm user access this page\n    var shouldLogout = true\n    if (this.props.lastRespMsg === respCodes.SUCCESS_REQ){\n      await this.props.getAuthUser(access)\n      if (this.props.lastRespMsg === respCodes.SUCCESS_REQ){\n        const {\n          currPage, imgPerPage\n        } = this.state\n        shouldLogout = false\n\n        await this.props.getImages(this.props.userId, currPage, imgPerPage)\n        this.props.stopLoading()\n      }\n    }\n    if(shouldLogout){\n      await this.props.userLogout();\n      this.props.stopLoading()\n    }\n  }\n\n  async onClickUpdateImage(type){\n    var formData = new FormData()\n    const {\n      currImgId, currTags, currImgName, currImgDesc, currImgCreatedAt, currPage, imgPerPage\n    } = this.state\n\n    if(!this.props.tags){ await this.props.getTags()}\n\n    console.log(\"img_id:\", currImgId)\n    formData.append(\"img_id\", currImgId)\n    formData.append(\"created_at\", new Date(currImgCreatedAt).getTime())\n    this.props.startLoading()\n\n    if(type === 'Update'){\n      formData.append(\"image_name\", currImgName)\n      formData.append(\"image_desc\", currImgDesc)\n      _forEach(currTags, (tag, idx)=>{\n        formData.append(\"tags\", tag)\n      })\n      formData.append(\"api_type\", \"update\")\n    }else{\n      formData.append(\"api_type\", \"delete\")\n    }\n    await this.props.upsertImage(formData, this.props.access)\n\n    if(this.props.lastRespMsg === respCodes.SUCCESS_REQ){\n      this.handleSnackBar(`${type} the selected image successfully.`, 'success')\n      await this.props.getImages(this.props.userId, currPage, imgPerPage)\n      this.handleModalClose('uploadedImgs')\n      if(type === 'Delete'){\n        await this.props.getAuthUser(this.props.access)\n      }\n    }else{\n      this.handleSnackBar(respCodeToMsg[this.props.lastRespMsg], \"error\")\n    }\n    this.props.stopLoading()\n  }\n\n  onInputChange(e, type){\n    console.log(\">>> onInputChange, e.target.value:\", e.target.value)\n    var tmpInputObj = {}\n    tmpInputObj[(type == 'imgName') ? 'currImgName' : 'currImgDesc'] = e.target.value\n    this.setState(tmpInputObj)\n  }\n\n  onDropdownChange(e, data){\n    console.log(`>>> onDropdownChange, data.name: ${data.name}, data.value: ${data.value}`)\n    const {\n      currTags\n    } = this.state\n    this.setState({\n      currTags: data.value\n    })\n  }\n\n  handleModalClose(modalType){\n    console.log(\">>> handleModalClose\")\n    var newStateObj = (modalType == 'profile') ? {profileUpdateOpen: false} :\n                      (modalType == 'avatar') ? {avatarUpdateOpen: false} : {imgUpdateOpen: false}\n    this.setState(newStateObj)\n  }\n  handleModalOpen(modalType, imgSrc, dataElem){\n    console.log(\">>> handleModalOpen\")\n    var newStateObj = (modalType == 'profile') ? {profileUpdateOpen: true} :\n                      (modalType == 'avatar') ? {avatarUpdateOpen: true} : {imgUpdateOpen: true}\n    if(imgSrc){ newStateObj[\"currImgSrc\"] = imgSrc }\n    if(dataElem){\n      newStateObj[\"currImgId\"] = dataElem.id\n      newStateObj[\"currImgName\"] = dataElem.image_name\n      newStateObj[\"currImgDesc\"] = dataElem.image_desc\n      newStateObj[\"currImgCreatedAt\"] = dataElem.created_at\n      newStateObj[\"currTags\"] = dataElem.tags\n    }\n    this.setState(newStateObj)\n  }\n\n  handleSnackBar(msg, variant){\n    this.props.enqueueSnackbar(msg, {variant})\n  }\n\n  async onUpdateAvatar(){\n    // validate the avatar to be uploaded whether it is empty or not\n    console.log(\">>> onUpdateAvatar. this.state.avatarFile: \", this.state.avatarFile)\n    if (!!!this.state.avatarFile){\n      this.handleSnackBar(\"No image avatar file is uploaded.\", 'error')\n    }else{\n      this.props.startLoading()\n      var formData = new FormData()\n      formData.append(\"avatar\", this.state.avatarFile)\n\n      await this.props.updateAvatar(formData, this.props.access, {\n        onSuccess: () => this.handleSnackBar(\"Update avatar successfully.\", 'success'),\n        onFail: (resp_code) => this.handleSnackBar(respCodeToMsg[resp_code], 'error')\n      })\n      if (this.props.lastRespMsg === respCodes.SUCCESS_REQ){\n        // update the updated avatar by calling getUser again\n        await this.props.getAuthUser(this.props.access)\n\n        this.handleModalClose('avatar')\n      }\n\n      this.props.stopLoading()\n    }\n  }\n\n  async onUpdateProfile(formVals){\n    console.log(\">>> onUpdateProfile.formVals:\", formVals)\n\n    var submitErrorObj = {}\n    const {password, retypePassword, email} = formVals\n    if(password != retypePassword){\n      submitErrorObj.password = \"Password and Retype Password field don't match.\";\n    }\n    if(password.length < 8){\n      submitErrorObj.password = \"Password length must be greater than 8.\";\n    }\n    if (!isValidEmail(email)){\n      submitErrorObj.email = \"Not a valid email.\"\n    }\n    if (!_isEmpty(submitErrorObj)){\n      return submitErrorObj\n    }\n\n    this.props.startLoading()\n\n    var formData = new FormData()\n    formData.append(\"email\", email)\n    formData.append(\"password\", password)\n\n    await this.props.updateUser(formData, this.props.access, {\n      onSuccess: () => this.handleSnackBar(\"Update user successfully.\", 'success'),\n      onFail: (resp_code) => this.handleSnackBar(respCodeToMsg[resp_code], 'error')\n    })\n    if (this.props.lastRespMsg === respCodes.SUCCESS_REQ){\n      // update the updated profile by calling getUser again\n      await this.props.getAuthUser(this.props.access)\n\n      this.handleModalClose('profile')\n    }\n    this.props.stopLoading()\n  }\n\n  onFormValidate(val){\n    console.log('>>> onFormValidate: ', val)\n    const errorObj = {};\n    _forEach(['email', 'password', 'retypePassword'], (e) => {\n      if(!val[e]){\n        errorObj[e] = 'Required field'\n      }\n    })\n    return errorObj;\n  }\n\n  onDrop(file){\n    console.log(\">>> onDrop.file:\", file[0])\n    const reader = new FileReader()\n    var res = {}\n    reader.onabort = () => console.log('file reading was aborted')\n    reader.onerror = () => console.log('file reading has failed')\n    reader.onload = () => {\n      this.setState({\n        avatarFile: file[0],\n        updatedAvatar: reader.result,\n      })\n    }\n    reader.readAsDataURL(file[0])\n  }\n\n  changeRightTabContent(contentType){\n    this.setState({\n      rightCardTab: contentType\n    })\n  }\n\n  async onPageChange(e, props){\n    console.log(\">>> ProfilePage.onPageChange.props:\", props, this.props)\n    const {\n      userId, lastRespMsg\n    } = this.props\n\n    const {\n      imgPerPage,\n    } = this.state\n\n    startLoading()\n\n    await this.props.getImages(-1, props.activePage, imgPerPage)\n\n    stopLoading()\n  }\n\n  render(){\n    const {\n      userDetail, userProfile, isLogin, classes, userId, userDtlFetched,\n      data, imgCount, numPages, tags\n    } = this.props\n\n    const {\n      updatedAvatar, profileUpdateOpen, avatarUpdateOpen,\n      imgUpdateOpen, rightCardTab, currImgSrc,\n      currImgName, currImgDesc, currTags\n    } = this.state\n\n    let noOfDay = 120\n    let endDate = new Date()\n    let startDate = new Date().setDate(endDate.getDate() - noOfDay)\n\n    let dateCountList = new Array(noOfDay)\n    _forEach(userProfile.activity, (activity, idx) => {\n      let dateIdx = endDate.getDate()-new Date(activity[0]).getDate()\n      dateCountList[dateIdx] = {\n        date: new Date(activity[0]),\n        count: activity[1]\n      }\n    })\n    _forEach(_range(noOfDay), (val, idx) => {\n      if(!dateCountList[idx]){\n        dateCountList[idx] = {\n          date: new Date().setDate(endDate.getDate() - val),\n          count: 0\n        }\n      }\n    })\n\n    let tagsOptions = _map(tags, (tag, idx) => {\n      return{\n        key: tag,\n        text: tag,\n        value: idx + 1,\n      }\n    })\n\n    return(\n      <div className=\"div-profilePage-wrapper\">\n        <Card className={classes.leftCard}>\n          {!userDtlFetched ?\n            <Loader\n              className=\"Loader-profile\"\n              type=\"line-scale-pulse-out-rapid\"\n              color=\"#000000\"\n              active\n            /> :\n            <div className=\"div-leftCard-area\">\n              <CardActionArea>\n                <Modal\n                  className=\"Modal-updateAvatar\"\n                  open={avatarUpdateOpen}\n                  dimmer=\"blurring\"\n                  onClose={() => this.handleModalClose('avatar')}\n                  trigger={\n                    <Image\n                    onClick={() => this.handleModalOpen('avatar')}\n                    src={userProfile.avatar} wrapped\n                    className=\"Image-profileAvatar\"/>\n                  }>\n                  <Modal.Header>Profile Picture</Modal.Header>\n                  <Modal.Content image>\n                    <Image size='medium' src={updatedAvatar || (userProfile.avatar)} wrapped />\n                    <Modal.Description>\n                      <Card className={classes.updateAvatarArea}>\n                        <CardActionArea className={classes.updateAvatarArea}>\n                          <Dropzone\n                            multiple={false}\n                            onDrop={this.onDrop}\n                            >\n                            {({getRootProps, getInputProps}) => (\n                              <section>\n                                <div {...getRootProps()}>\n                                  <input {...getInputProps()} />\n                                  <span className=\"span-drapdropText\">\n                                    <AddPhotoAlternate />\n                                    Drag and drop image here, or click to select image to upload.\n                                  </span>\n                                </div>\n                              </section>\n                            )}\n                          </Dropzone>\n                        </CardActionArea>\n                      </Card>\n                    </Modal.Description>\n                  </Modal.Content>\n                  <Button className=\"Button-updateAvatar\" onClick={this.onUpdateAvatar}>\n                    Change\n                  </Button>\n                </Modal>\n\n              </CardActionArea>\n\n              <CardContent className={classes.leftCardContent}>\n                <Label className=\"Label-profile\">\n                  <Icon name=\"user\"/>\n                  Username: {userDetail.username}\n                </Label>\n                <Label className=\"Label-profile\">\n                  <Icon name=\"info\"/>\n                  User ID: {userId}\n                </Label>\n                <Label className=\"Label-profile\">\n                  <Icon name=\"mail\"/>\n                  Email: {userDetail.email}\n                </Label>\n                <Label className=\"Label-profile\">\n                  <Icon name=\"add to calendar\"/>\n                  Joined In: {moment(new Date(userDetail.createdAt)).format(\"MM-DD-YYYY\")}\n                </Label>\n                <Label className=\"Label-profile\">\n                  <Icon name=\"sign-in\"/>\n                  Last Login: {moment(new Date(userDetail.lastLoginAt)).format(\"MM-DD-YYYY HH:mm A\")}\n                </Label>\n                <Label className=\"Label-profile\">\n                  <Icon name=\"undo\"/>\n                  Last Update: {userProfile.lastProfileEdit ?\n                    moment(new Date(userProfile.lastProfileEdit)).format(\"MM-DD-YYYY HH:mm A\"):\n                    'N/A'\n                  }\n                </Label>\n                <Label className=\"Label-profile\">\n                  <Icon name=\"image\"/>\n                  Images: {userProfile.noOfImgs}\n                </Label>\n              </CardContent>\n\n              <Form\n                onSubmit={this.onUpdateProfile}\n                validate={this.onFormValidate}\n                render={({handleSubmit, submitting, pristine}) => (\n                <Modal\n                  className=\"Modal-updateProfile\"\n                  open={profileUpdateOpen}\n                  dimmer=\"blurring\"\n                  onClose={() => this.handleModalClose('profile')}\n                  trigger={<Button onClick={() => this.handleModalOpen('profile')} className=\"Button-updateProfile\">Update Profile</Button>}>\n                  <Modal.Header>Update Profile</Modal.Header>\n                  <Modal.Content image>\n                    <Modal.Description>\n                      <form className=\"form-updateUser\" onSubmit={handleSubmit}>\n                        <Grid>\n                          <Field fullWidth required name=\"email\" type=\"text\"\n                            render={({input, meta}) => (\n                              <div className=\"div-inlineGrid\">\n                                <TextField\n                                  label=\"Email\" onChange={input.onChange} className={classes.textField}\n                                  margin=\"normal\" error={meta.submitFailed && !!meta.error} variant=\"outlined\"\n                                  InputProps={{\n                                    startAdornment: (<InputAdornment position=\"start\"><ContactMail /></InputAdornment>),\n                                  }}\n                                />\n                                <span className=\"span-metaError\">\n                                  {meta.dirty ? meta.submitError :\n                                    meta.modified ? meta.error : \"\"}\n                                </span>\n                              </div>\n                            )}\n                          />\n                        </Grid>\n                        <Grid>\n                          <Field fullWidth required name=\"password\"\n                            render={({input, meta}) => (\n                              <div className=\"div-inlineGrid\">\n                                <TextField type=\"password\"\n                                  label=\"Password\" onChange={input.onChange} className={classes.textField}\n                                  margin=\"normal\" error={meta.submitFailed && !!meta.error} variant=\"outlined\"\n                                  InputProps={{\n                                    startAdornment: (<InputAdornment position=\"start\"><VpnKey /></InputAdornment>),\n                                  }}\n                                />\n                                <span className=\"span-metaError\">\n                                  {meta.dirty ? meta.submitError :\n                                    meta.modified ? meta.error : \"\"}\n                                </span>\n                              </div>\n                            )}\n                          />\n                        </Grid>\n                        <Grid>\n                          <Field fullWidth required name=\"retypePassword\"\n                            render={({input, meta}) => (\n                              <div className=\"div-inlineGrid\">\n                                <TextField\n                                  label=\"Retype Password\" type=\"password\" onChange={input.onChange} className={classes.textField}\n                                  margin=\"normal\" error={meta.submitFailed && !!meta.error} variant=\"outlined\"\n                                  InputProps={{\n                                    startAdornment: (<InputAdornment position=\"start\"><VpnKey /></InputAdornment>),\n                                  }}\n                                />\n                                <span className=\"span-metaError\">\n                                  {meta.dirty ? meta.submitError :\n                                    meta.modified ? meta.error : \"\"}\n                                </span>\n                              </div>\n                            )}\n                          />\n                        </Grid>\n                        <Button className=\"Button-updateSubmit\" type=\"submit\">Update</Button>\n                      </form>\n                    </Modal.Description>\n                  </Modal.Content>\n                </Modal>\n              )}\n              />\n            </div>\n          }\n\n        </Card>\n\n        <Card className={classes.rightCard}>\n          <Button.Group labeled icon className=\"ButtonGroup-profile\">\n            <Button onClick={() => this.changeRightTabContent('userActivity')} icon='braille' active={rightCardTab=='userActivity'} content='User Activity' />\n            <Button onClick={() => this.changeRightTabContent('uploadedImgs')} icon='images outline' active={rightCardTab=='uploadedImgs'} content='Uploaded Images' />\n          </Button.Group>\n\n          { (rightCardTab == 'uploadedImgs') ?\n            (\n              <>\n                <Divider horizontal>\n                  <Header as='h4'>\n                    <Icon name='images outline' />\n                    Uploaded Images\n                  </Header>\n                </Divider>\n                <div className=\"div-uploadedImgs-wrapper\">\n                  <Pagination\n                    className=\"Pagination-uploadedImgs\"\n                    defaultActivePage={1}\n                    ellipsisItem={{ content: <Icon name='ellipsis horizontal' />, icon: true }}\n                    firstItem={{ content: <Icon name='angle double left' />, icon: true }}\n                    lastItem={{ content: <Icon name='angle double right' />, icon: true }}\n                    prevItem={{ content: <Icon name='angle left' />, icon: true }}\n                    nextItem={{ content: <Icon name='angle right' />, icon: true }}\n                    onPageChange={this.onPageChange}\n                    totalPages={numPages}\n                  />\n                  {(data.length == 0) ?\n                    <div className=\"div-noImage-placeholder\">\n                      <span className=\"span-noImages\"><Icon name=\"images\"/> No Images</span>\n                    </div> : <Card className=\"Card-imgs\">\n                    <Grid columns={3} className=\"Grid-img-wrapper\">\n                      {\n                        _map(data, (elem, idx) => {\n                          const imgSrc = elem.image_file\n                          return (\n                            <Grid.Column key={\"GridCol-\" + idx} onClick={() => this.handleModalOpen('uploadedImgs', imgSrc, elem)}>\n                              <Card className=\"Card-img\">\n                                <Image className=\"Image-uploadedImgs\" src={imgSrc}/>\n                              </Card>\n                            </Grid.Column>\n                            )\n                          }\n                        )\n                      }\n                    </Grid>\n                  </Card>}\n                </div>\n              </>\n            ):\n            (<>\n              <Divider horizontal>\n                <Header as='h4'>\n                  <Icon name='braille' />\n                  User Activity\n                </Header>\n              </Divider>\n              <div className=\"div-calendarHeatmap-wrapper\">\n                <CalendarHeatmap\n                  startDate={startDate}\n                  endDate={endDate}\n                  values={dateCountList}\n                  classForValue={value => {\n                    if(value.count == 0){\n                      return `color-heatmap-0`\n                    }else if(value.count <= 4 && value.count > 0){\n                      return `color-heatmap-1`\n                    }else if(value.count <= 8 && value.count > 4){\n                      return `color-heatmap-2`\n                    }else if(value.count <= 12 && value.count > 8){\n                      return `color-heatmap-3`\n                    }else if(value.count <= 16 && value.count > 12){\n                      return `color-heatmap-4`\n                    }else if(value.count > 16){\n                      return `color-heatmap-5`\n                    }\n                  }}\n                  showWeekdayLabels={true}\n                  gutterSize={4}\n                  tooltipDataAttrs={value => {\n                    let tmpDate = new Date(value.date)\n                    return {\n                      'data-tip': `${tmpDate.toGMTString().split(\", \")[1].slice(0,11)}` +\n                      `<br/> Uploaded Images: ${value.count}`,\n                    };\n                  }}\n                />\n                <ReactTooltip multiline/>\n              </div>\n            </>)\n          }\n        </Card>\n        <Modal\n          className=\"Modal-updateImage\"\n          open={imgUpdateOpen}\n          dimmer=\"blurring\"\n          onClose={() => this.handleModalClose('uploadedImgs')}>\n          <Modal.Header>Update Image</Modal.Header>\n          <Modal.Content image>\n            <Image wrapped size='medium' src={currImgSrc} />\n            <div className=\"div-updateImage-wrapper\">\n              <Input icon=\"list\" iconPosition=\"left\"\n                placeholder=\"Image name\"\n                className=\"Input-imgName\"\n                value={currImgName}\n                onChange={(e) => this.onInputChange(e,'imgName')}\n                />\n              <Input icon=\"newspaper outline\" iconPosition=\"left\"\n                placeholder=\"Image description\"\n                className=\"Input-imgDesc\"\n                value={currImgDesc}\n                onChange={(e) => this.onInputChange(e,'imgDesc')}\n                />\n              <Dropdown\n                className=\"Dropdown-tags\"\n                placeholder='Tags'\n                value={currTags}\n                onChange={this.onDropdownChange}\n                renderLabel={(label) => ({color:'blue', icon:\"tag\", content: label.text})}\n                multiple\n                search\n                selection\n                options={tagsOptions}\n              />\n            </div>\n          </Modal.Content>\n          <div className=\"div-deleteUpdateImageButton-wrapper\">\n            <Button onClick={() => this.onClickUpdateImage(\"Delete\")} className=\"Button-deleteImage\">Delete</Button>\n            <Button onClick={() => this.onClickUpdateImage(\"Update\")} className=\"Button-updateImage\">Update</Button>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      lastRespMsg: state.userReducer.lastRespMsg,\n      access: state.userReducer.access,\n      isLogin: state.userReducer.isLogin,\n      userId: state.userReducer.userId,\n      userDetail: state.userReducer.userDetail,\n      userProfile: state.userReducer.userProfile,\n      userDtlFetched: state.userReducer.userDtlFetched,\n      data: state.apiReducer.data,\n      imgCount: state.apiReducer.imgCount,\n      numPages: state.apiReducer.numPages,\n      tags: state.apiReducer.tags\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n      getAuthUser, userLogout, upsertImage,\n      getImages, updateAvatar, getTags,\n      verifyJWTToken, startLoading,\n      stopLoading, updateUser }, dispatch)\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(withStyles(overrideStyles)(withSnackbar(ProfilePage))));\n","import React, { Component } from 'react';\nimport \"./index.scss\"\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\nimport AddPhotoAlternate from '@material-ui/icons/AddPhotoAlternate';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Dropzone from 'react-dropzone'\nimport { upsertImage } from \"Reducer/API/APIActions\";\nimport { Form, Field } from 'react-final-form'\nimport _forEach from 'lodash/forEach';\nimport _map from 'lodash/map';\nimport _assign from 'lodash/assign';\nimport { FieldArray } from 'react-final-form-arrays'\nimport { bindActionCreators } from 'redux';\nimport { respCodeToMsg, respCodes } from 'Utils/Config/constants';\nimport { startLoading, stopLoading } from \"Reducer/UI/UIActions\";\nimport { verifyJWTToken, userLogout } from \"Reducer/User/UserActions\";\nimport { withSnackbar } from 'notistack';\nimport { Dropdown, Input, Button, Divider, Header, Icon } from 'semantic-ui-react'\nimport axios from 'axios'\n\nconst overrideStyles = theme => ({\n  uploadCard:{\n    textAlign: \"center\",\n    width: \"40%\",\n    height: \"100%\"\n  },\n  pendingUpload:{\n    width: \"55%\",\n    marginLeft: \"10px\"\n  },\n  AddPhotoIcon:{\n    margin: \"auto\",\n    display: \"block\"\n  }\n\n});\n\nclass UploadPage extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      files: [],\n      imgNames: null,\n      imgDescs: null,\n      tags: null,\n      modifiedTags: []\n    }\n    this.onDrop = this.onDrop.bind(this)\n    this.onFormSubmit = this.onFormSubmit.bind(this)\n    this.onInputChange = this.onInputChange.bind(this)\n    this.onDropdownChange = this.onDropdownChange.bind(this)\n  }\n\n  handleSnackBar(msg, variant){\n    this.props.enqueueSnackbar(msg, {variant})\n  }\n\n  onDrop(acceptedFiles){\n    console.log(\">>> onDrop.acceptedFiles:\", acceptedFiles)\n    var fileList = []\n    var prevList = []\n    _forEach(acceptedFiles, (file, i) => {\n      var target = file.target\n      const reader = new FileReader()\n      var res = {}\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n        fileList.push(file)\n        prevList.push(reader.result)\n        if (i == acceptedFiles.length - 1){\n          this.setState({\n            files: fileList,\n            prevs: prevList,\n            imgNames: new Array(acceptedFiles.length).fill(\"\"),\n            imgDescs: new Array(acceptedFiles.length).fill(\"\"),\n            tags: new Array(acceptedFiles.length).fill(new Array()),\n          })\n        }\n      }\n      reader.readAsDataURL(file)\n    })\n  }\n\n\n  async onFormSubmit(e){\n    e.preventDefault()\n    const{\n      files, imgNames, imgDescs, tags\n    } = this.state\n\n    this.props.startLoading()\n    const access = localStorage.getItem(\"access\")\n    var isUploadSuccess = true\n    for(var i = 0; i < files.length; i++) {\n      var formData = new FormData()\n      formData.append(\"image_name\", imgNames[i])\n      formData.append(\"image_desc\", imgDescs[i])\n      formData.append(\"image_file\", files[i])\n      formData.append(\"api_type\", \"insert\")\n      _forEach(tags[i], (tag, idx)=>{\n        formData.append(\"tags\", tags[i][idx])\n      })\n      await this.props.upsertImage(\n        formData,\n        access\n      )\n\n      if(this.props.lastRespMsg !== respCodes.SUCCESS_REQ){\n        this.handleSnackBar(respCodeToMsg[this.props.lastRespMsg], 'error')\n        isUploadSuccess = false\n        break\n      }\n    }\n\n    this.props.stopLoading()\n\n    if(isUploadSuccess){\n      this.handleSnackBar(\"Upload images successfully.\", 'success')\n      this.setState({\n        files: [],\n        imgNames: null,\n        imgDescs: null\n      })\n    }\n  }\n\n  onDropdownChange(e, data){\n    console.log(`>>> onDropdownChange, data.name: ${data.name}, data.value: ${data.value}`)\n    const {\n      tags\n    } = this.state\n    var dataNameArray = data.name.split(\"-\")\n    tags[parseInt(dataNameArray[1])] = data.value\n    this.setState({\n      tags: tags\n    })\n  }\n\n  onInputChange(e){\n    const eVal = e.target.value\n    const eName = e.target.name\n    console.log(\">>> onInputChange.eName, eVal : \", eName, eVal)\n\n    const {\n      imgNames, imgDescs\n    } = this.state\n\n    var eNameArray = eName.split(\"-\")\n    if(eNameArray[0] == \"imgName\"){\n      imgNames[parseInt(eNameArray[1])] = eVal\n      this.setState({\n        imgNames: imgNames\n      })\n    }else if(eNameArray[0] == \"imgDesc\"){\n      imgDescs[parseInt(eNameArray[1])] = eVal\n      this.setState({\n        imgDescs: imgDescs\n      })\n    }\n  }\n\n\n  async componentDidMount(){\n    //user restricted area, to avoid access without valid jwt token atm user access this page\n    const access = localStorage.getItem(\"access\")\n    const refresh = localStorage.getItem(\"refresh\")\n    await this.props.verifyJWTToken(access, refresh)\n\n    if (!this.props.isLogin){\n      await this.props.userLogout();\n    }\n\n    this.state.modifiedTags = _map(this.props.tags, (tag, idx) => {\n      return {\n        key: tag,\n        text: tag,\n        value: idx + 1\n      }\n    })\n  }\n\n  render(){\n    const {\n      classes\n    } = this.props\n\n    const {\n      files, modifiedTags\n    } = this.state\n\n    return(\n      <div className=\"div-uploadPage-wrapper\">\n        <form className=\"form-upload\" onSubmit={this.onFormSubmit} encType=\"multipart/form-data\">\n          <Card className={classes.uploadCard}>\n            <CardActionArea className={classes.cardActionArea}>\n              <Dropzone\n                onDrop={this.onDrop}\n                >\n                {({getRootProps, getInputProps}) => (\n                  <section>\n                    <div {...getRootProps()}>\n                      <input {...getInputProps()} />\n                      <span className=\"span-drapdropText\">\n                        <AddPhotoAlternate className={classes.AddPhotoIcon}/>\n                          Drag and drop some files here, or click to select files to upload.\n                        </span>\n                    </div>\n                  </section>\n                )}\n              </Dropzone>\n            </CardActionArea>\n          </Card>\n          <Card className={classes.pendingUpload}>\n            <Divider horizontal>\n              <Header as='h4'>\n                <Icon name='images outline' />\n                Upload Images\n              </Header>\n            </Divider>\n            { files.length == 0 && <div className=\"div-placeholder\"></div> }\n            { files.length > 0 && _map(files, (image, idx)=>{\n              return (\n                <div key={image.name + idx} className=\"div-uploadField\">\n                  <div className=\"\">\n                    <Input icon=\"list\" iconPosition=\"left\"\n                      placeholder=\"Image name\"\n                      className=\"Input-imgName\"\n                      name={\"imgName-\" + idx}\n                      value={this.state.imgNames[parseInt(idx)]}\n                      onChange={this.onInputChange}\n                      />\n                    <Input icon=\"newspaper outline\" iconPosition=\"left\"\n                      placeholder=\"Image description\"\n                      className=\"Input-imgDesc\"\n                      name={\"imgDesc-\" + idx}\n                      value={this.state.imgDescs[parseInt(idx)]}\n                      onChange={this.onInputChange}\n                      />\n                      <Dropdown\n                        className=\"Dropdown-tags\"\n                        placeholder='Tags'\n                        name={\"tags-\" + idx}\n                        onChange={this.onDropdownChange}\n\n                        renderLabel={(label) => ({color:'blue', icon:\"tag\", content: label.text})}\n                        multiple\n                        search\n                        selection\n                        options={modifiedTags}\n                      />\n                  </div>\n                  <div>\n                    <img src={this.state.prevs[idx]} className=\"img-preview\"/>\n                  </div>\n                </div>\n              )\n            })}\n            {\n              files.length > 0 && <Button type=\"submit\" className=\"Button-submit\"> Submit </Button>\n            }\n          </Card>\n        </form>\n\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n    return {\n      lastRespMsg: state.apiReducer.lastRespMsg,\n      tags: state.apiReducer.tags,\n      isLogin: state.userReducer.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({ upsertImage, verifyJWTToken,\n       startLoading, stopLoading, userLogout }, dispatch)\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(overrideStyles)(withSnackbar(UploadPage)))\n","import React, { Component } from 'react';\nimport \"./index.scss\"\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport _map from 'lodash/map';\nimport _range from 'lodash/range';\nimport _forEach from 'lodash/forEach';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/styles';\nimport { Icon, Pagination, Label, Button, Select,\n   Grid, Image, Modal, Card, Divider, Header, Table,\n    Dropdown, Placeholder, Search, Segment } from 'semantic-ui-react'\nimport { bindActionCreators } from 'redux';\nimport { respCodes } from \"Utils/Config/constants\";\nimport { getImages, getTags } from 'Reducer/API/APIActions';\nimport { startLoading, stopLoading } from 'Reducer/UI/UIActions';\n// import { BASE_URL } from 'Utils/Config/constants'\nimport Loader from 'react-loaders'\nimport moment from 'moment';\nimport _debounce from 'lodash/debounce';\n\nconst overrideStyles = theme => ({\n  gridList: {\n\n  },\n  subheader: {\n    height: 'auto'\n  },\n});\n\n\nclass HomePage extends React.Component{\n\n  constructor(props){\n    super(props)\n    this.state = {\n      currPage: 1,\n      imgPerPage: '12',\n      selectedTags: [],\n      isContentLoading: false,\n      imgPreviewOpen: false,\n      currImgDesc: \"\",\n      currImgName: \"\",\n      currImgSrc: \"\",\n      currImgCreatedAt: \"\",\n      currTags: [],\n      searchVal: \"\"\n    }\n    this.onPageChange = this.onPageChange.bind(this)\n    this.onPerPageChange = this.onPerPageChange.bind(this)\n    this.onDropdownChange = this.onDropdownChange.bind(this)\n    this.onClickLabel = this.onClickLabel.bind(this)\n    this.handleContentLoading = this.handleContentLoading.bind(this)\n    this.onClickClearTags = this.onClickClearTags.bind(this)\n    this.handleModalClose = this.handleModalClose.bind(this)\n    this.handleModalOpen = this.handleModalOpen.bind(this)\n    this.onImageClick = this.onImageClick.bind(this)\n    this.handleSearchChange = this.handleSearchChange.bind(this)\n  }\n  handleModalClose(){\n    console.log(\">>> handleModalClose\")\n    this.setState({\n      currImgName: \"\",\n      currImgName: \"\",\n      currImgSrc: \"\",\n      currTags: [],\n      currImgCreatedAt: \"\",\n      imgPreviewOpen: false,\n    })\n  }\n  handleModalOpen(){\n    console.log(\">>> handleModalOpen\")\n\n  }\n  onImageClick(currImgName, currImgDesc, currImgSrc, currTags, currImgCreatedAt){\n    console.log(\">>> onImageClick\")\n    this.setState({\n      currImgName,\n      currImgDesc,\n      currImgSrc,\n      currTags,\n      currImgCreatedAt,\n      imgPreviewOpen: true\n    })\n  }\n\n  async componentDidMount(){\n    startLoading()\n    const {\n      userId\n    } = this.props\n    await this.props.getImages(-1, 1, 12, [], '')\n    if(!this.props.tags){ await this.props.getTags()}\n    stopLoading()\n  }\n\n  async onPageChange(e, props){\n    console.log(\">>> HomePage.onPageChange.props:\", props, this.props)\n    const {\n      userId, lastRespMsg\n    } = this.props\n    const {\n      imgPerPage, selectedTags, searchVal\n    } = this.state\n    this.handleContentLoading('start')\n    await this.props.getImages(-1, props.activePage, imgPerPage, selectedTags, searchVal)\n    this.handleContentLoading('stop')\n  }\n\n  async onDropdownChange(e, dropdownObj){\n    console.log(\">>> onDropdownChange.dropdownObj.value: \", dropdownObj.value)\n    this.setState({\n      selectedTags: dropdownObj.value\n    })\n    const {\n      imgPerPage, searchVal\n    } = this.state\n    const {\n      currPage\n    } = this.props\n    this.handleContentLoading('start')\n    await this.props.getImages(-1, currPage, imgPerPage, dropdownObj.value, searchVal)\n    this.handleContentLoading('stop')\n  }\n\n  async onPerPageChange(e, selectTarget){\n    console.log(\">>> onPerPageChange:\", selectTarget)\n    this.setState({\n      currPage: 1,\n      imgPerPage: selectTarget.value\n    })\n    const {\n      currPage, searchVal, selectedTags\n    } = this.state\n    this.handleContentLoading('start')\n    await this.props.getImages(-1, currPage, selectTarget.value, selectedTags, searchVal)\n    this.handleContentLoading('stop')\n  }\n\n  async onClickLabel(idx){\n    // idx refers to the index of the elem in the selectedTags array\n    var selectedTagsCpy = this.state.selectedTags\n    var tmpSelectedTags = selectedTagsCpy.slice(0,idx).concat(selectedTagsCpy.slice(idx + 1, selectedTagsCpy.length))\n    this.setState({\n      currPage: 1,\n      selectedTags: tmpSelectedTags\n    })\n    const {\n      currPage, imgPerPage, searchVal\n    } = this.state\n    this.handleContentLoading('start')\n    await this.props.getImages(-1, 1, imgPerPage, tmpSelectedTags, searchVal)\n    this.handleContentLoading('stop')\n  }\n\n  async onClickClearTags(){\n    const {\n      imgPerPage, searchVal\n    } = this.state\n    this.setState({\n      currPage: 1,\n      selectedTags: []\n    })\n    this.handleContentLoading('start')\n    await this.props.getImages(-1, 1, imgPerPage, [], searchVal)\n    this.handleContentLoading('stop')\n  }\n\n  async handleSearchChange(e, searchObj){\n    const {\n      imgPerPage, selectedTags\n    } = this.state\n    this.setState({\n      currPage: 1,\n      selectedTags: [],\n      searchVal: searchObj.value\n    })\n    this.handleContentLoading('start')\n    await this.props.getImages(-1, 1, imgPerPage, [], searchObj.value)\n    this.handleContentLoading('stop')\n  }\n\n  handleContentLoading(type){\n    if(type === 'start'){\n      this.setState({\n        isContentLoading: true\n      })\n    }else{\n      //just to make the state transition look smooth\n      setTimeout(() => {\n        this.setState({\n          isContentLoading: false\n        })\n      }, 300);\n    }\n  }\n\n  render(){\n    const {\n      classes, isLoading, userId, lastRespMsg,\n      data, imgCount, numPages, tags,\n    } = this.props\n\n    const {\n      imgPerPage, currPage, selectedTags, isContentLoading,\n      imgPreviewOpen, currImgSrc, currImgName, currImgDesc, currTags,\n      currImgCreatedAt, searchVal\n    } = this.state\n\n    let cardIdxToColor = ['red','orange','yellow','olive','green','teal','blue','violet',\n    'purple','pink','brown','grey','black']\n\n    let tagsOptions = _map(tags, (tag, idx) => {\n      return{\n        key: tag,\n        text: tag,\n        value: idx + 1,\n      }\n    })\n\n    return (\n      <div className=\"div-homePage-wrapper\">\n        <div className=\"div-pageWidgets-wrapper\">\n          <Modal\n            className=\"Modal-imageViewer\"\n            open={imgPreviewOpen}\n            dimmer=\"blurring\"\n            onClose={() => this.handleModalClose()}\n            >\n            <Table basic='very' celled collapsing className=\"Table-imgDescContent\">\n            <Table.Body>\n              <Table.Row>\n                <Table.Cell className=\"TableCell-imgDescContent-key\"><Icon name=\"list\"/>Name:</Table.Cell>\n                <Table.Cell className=\"TableCell-imgDescContent-val\">{currImgName}</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell className=\"TableCell-imgDescContent-key\"><Icon name=\"newspaper outline\"/>Description:</Table.Cell>\n                <Table.Cell className=\"TableCell-imgDescContent-val\">{currImgDesc}</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell className=\"TableCell-imgDescContent-key\"><Icon name=\"calendar alternate outline\"/>Uploaded Date:</Table.Cell>\n                <Table.Cell className=\"TableCell-imgDescContent-val\">{currImgCreatedAt}</Table.Cell>\n              </Table.Row>\n              <Table.Row>\n                <Table.Cell className=\"TableCell-imgDescContent-key\"><Icon name=\"tags\"/>Tags:</Table.Cell>\n                <Table.Cell className=\"TableCell-imgDescContent-val\">\n                {\n                  _map(currTags, (elem, idx) => {\n                    return (\n                      <Label className=\"Label-tags\" key={\"currLabel-\" + idx}>\n                      {tags[currTags[idx]-1]}\n                      </Label>\n                    )\n                  })\n                }\n                </Table.Cell>\n                </Table.Row>\n              </Table.Body>\n            </Table>\n            <Image src={currImgSrc} wrapped />\n          </Modal>\n\n          <Pagination\n            defaultActivePage={1}\n            ellipsisItem={{ content: <Icon name='ellipsis horizontal' />, icon: true }}\n            firstItem={{ content: <Icon name='angle double left' />, icon: true }}\n            lastItem={{ content: <Icon name='angle double right' />, icon: true }}\n            prevItem={{ content: <Icon name='angle left' />, icon: true }}\n            nextItem={{ content: <Icon name='angle right' />, icon: true }}\n            onPageChange={this.onPageChange}\n            totalPages={numPages}\n          />\n\n          <Search\n            className=\"Search-image\"\n            input={{ icon: 'search', iconPosition: 'right' }}\n            onSearchChange={_debounce(this.handleSearchChange, 500, {\n              leading: true,\n            })}\n            showNoResults={false}\n            loading={isContentLoading}\n            value={searchVal}\n          />\n          {\n            /*\n            onResultSelect={this.handleResultSelect}\n            onSearchChange={_.debounce(this.handleSearchChange, 500, {\n              leading: true,\n            })}\n            */\n          }\n\n          <div className=\"div-choosePageSelect\">\n            <span className=\"span-imgPerPage\" >Images per page:</span>\n            <Select onChange={this.onPerPageChange} value={imgPerPage} options={[\n              { key: '12', value: '12', text: '12 images per page' },\n              { key: '24', value: '24', text: '24 images per page' },\n            ]}/>\n          </div>\n        </div>\n\n        <div className=\"div-tagsGrid-wrapper\">\n          <Card className=\"Card-tags\" color=\"blue\">\n            <Divider horizontal>\n              <Header className=\"Header-title\" as='h4'>\n                <Icon name='tags' />\n                Availale Tags\n              </Header>\n            </Divider>\n            <Dropdown\n              placeholder='Tags'\n              className=\"Dropdown-tags\"\n              value={selectedTags}\n              multiple\n              minCharacters={2}\n              search\n              selection\n              options={tagsOptions}\n              renderLabel={()=>null}\n              onChange={this.onDropdownChange}\n            />\n            <Button className=\"Button-clearSelectedTags\" content=\"Clear selected tags\" onClick={this.onClickClearTags}/>\n\n            <Divider horizontal>\n              <Header className=\"Header-title\" as='h4'>\n                <Icon name='check' />\n                <Icon name='tags' />\n                Selected Tags\n              </Header>\n            </Divider>\n\n            <div className=\"div-selectedTags-wrapper\">\n              {\n                _map(selectedTags, (nonUsed ,idx) => {\n                  return (\n                    <Label onClick={()=>this.onClickLabel(idx)} className=\"Label-tags\" key={\"Label-\" + idx}>\n                      {tags[selectedTags[idx]-1]}\n                    </Label>\n                  )\n                })\n              }\n              {\n                selectedTags.length == 0 && <Label className=\"Label-tags\">No tags selected</Label>\n              }\n            </div>\n          </Card>\n\n          <Card className=\"Card-imgs\" color=\"blue\">\n            {\n              <Grid padded columns={4} className=\"Grid-img-wrapper\">\n                {\n                  (isContentLoading) ?\n                  <div className=\"div-contentLoader\">\n                    <Loader\n                      type=\"line-scale-pulse-out-rapid\"\n                      color=\"#000000\"\n                      active\n                    />\n                  </div>\n                  : ((data && data.length == 0) || !data) ? (\n                    <div className=\"div-noImage-placeholder\">\n                      <span className=\"span-noImages\"><Icon name=\"images\"/> No Images</span>\n                    </div>) : _map(data, (elem, idx) => {\n                      let currImgSrc = elem.image_file\n                      let currImgName = elem.image_name\n                      let currImgDesc = elem.image_desc\n                      let currTags = elem.tags\n                      let currImgCreatedAt = moment(new Date(elem.created_at)).format(\"MM-DD-YYYY\")\n                      return (\n                        <Grid.Column key={\"GridCol-\" + idx}>\n                          <Card onClick={() => this.onImageClick(currImgName, currImgDesc, currImgSrc, currTags, currImgCreatedAt)} className=\"Card-img\" color={cardIdxToColor[idx%12]}>\n                            <Image src={currImgSrc}/>\n                          </Card>\n                        </Grid.Column>\n                      )\n                    }\n                  )\n                }\n              </Grid>\n            }\n          </Card>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      isLoading: state.uiReducer.isLoading,\n      userId: state.userReducer.userId,\n      lastRespMsg: state.apiReducer.lastRespMsg,\n      data: state.apiReducer.data,\n      imgCount: state.apiReducer.imgCount,\n      numPages: state.apiReducer.numPages,\n      currPage: state.apiReducer.currPage,\n      tags: state.apiReducer.tags\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({startLoading, stopLoading, getImages, getTags}, dispatch)\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(overrideStyles)(HomePage))\n","import React, { Component } from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { verifyJWTToken, getAuthUser } from \"Reducer/User/UserActions\";\nimport { startLoading, stopLoading } from \"Reducer/UI/UIActions\";\nimport { bindActionCreators } from 'redux';\n\nimport LoginPage from 'View/User/LoginPage';\nimport SignupPage from 'View/User/SignupPage';\nimport ProfilePage from 'View/User/ProfilePage';\nimport UploadPage from 'View/Gallery/UploadPage';\nimport HomePage from 'View/Gallery/HomePage';\n\n//list of pages component to be mounted on the routes\nimport { routeName } from \"Utils/Config/constants.js\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n        {...rest}\n        render={props =>\n          rest.isLogin ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: routeName.LOGIN,\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n  )\n}\n\nconst PublicRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        rest.isLogin ? (\n          <Redirect\n            to={{\n              pathname: routeName.PROFILE,\n              state: { from: props.location }\n            }}\n          />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  )\n}\n\nclass Router extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n    };\n  }\n\n  async componentDidMount(){\n\n    this.props.startLoading()\n    const access = localStorage.getItem(\"access\")\n    const refresh = localStorage.getItem(\"refresh\")\n    //first verify the existing tokens validity\n    await this.props.verifyJWTToken(access, refresh)\n\n    if (this.props.isLogin){\n      //wait until the verification ended, and if the current state is logged on then get the corresponding user\n      await this.props.getAuthUser(access)\n    }\n    this.props.stopLoading()\n  }\n\n  render() {\n    const {\n      isLogin\n    } = this.props\n\n    return (\n      <div>\n        {(\n          <div>\n            <Route path={routeName.HOME} exact component={HomePage} />\n            <PublicRoute isLogin={isLogin} path={routeName.LOGIN} component={LoginPage} />\n            <PublicRoute isLogin={isLogin} path={routeName.SIGNUP} component={SignupPage} />\n            <PrivateRoute isLogin={isLogin} path={routeName.UPLOAD} exact component={UploadPage} />\n            <PrivateRoute isLogin={isLogin} path={routeName.PROFILE} component={ProfilePage} />\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      isLogin: state.userReducer.isLogin,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({verifyJWTToken, getAuthUser, startLoading, stopLoading}, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Router);\n","import React, { Component } from 'react';\nimport \"./index.scss\"\nimport { pure } from 'recompose';\nimport Loader from 'react-loaders'\n\nconst LoaderDisplay = (props) => {\n\n\n  return (\n    <div className=\"div-loaderDisplay-wrapper\">\n      <div className=\"div-loaderDisplay-cover\"></div>\n      <div className=\"div-loader-wrapper\">\n\n        <Loader\n          type=\"line-scale-pulse-out-rapid\"\n          color=\"#000000\"\n          active\n        />\n\n\n      </div>\n    </div>\n  );\n}\nexport default pure(LoaderDisplay);\n","import React, { Component } from 'react';\nimport \"./index.scss\"\nimport 'semantic-ui-css/semantic.min.css'\nimport GlobalHeader from 'View/Layout/GlobalHeader';\nimport GlobalFooter from 'View/Layout/GlobalFooter';\nimport Router from 'Router';\nimport { getTags } from 'Reducer/API/APIActions';\nimport LoaderDisplay from 'Components/LoaderDisplay';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { startLoading, stopLoading } from 'Reducer/UI/UIActions';\n\nclass Layout extends React.Component{\n\n  constructor(props){\n    super(props)\n    this.state = {\n      isDrawerOpen: false,\n    }\n    this.handleDrawerAction = this.handleDrawerAction.bind(this)\n\n  }\n\n  async componentDidMount(){\n    this.props.startLoading()\n\n    await this.props.getTags()\n\n    this.props.stopLoading()\n  }\n\n  handleDrawerAction(){\n    this.setState({\n      isDrawerOpen: !this.state.isDrawerOpen\n    })\n  }\n\n  render(){\n    const {\n      isDrawerOpen,\n    } = this.state\n\n    const {\n      isLoading\n    } = this.props\n    return(\n      <div className=\"div-layout-wrapper\">\n        <GlobalHeader isDrawerOpen={isDrawerOpen} handleDrawerAction={this.handleDrawerAction}/>\n        <div className={isLoading ? \"full-opacity\" : \"full-transparents\"}>\n          <LoaderDisplay />\n        </div>\n        <div className={\"div-layoutContent-wrapper \" + ((isDrawerOpen) ? \"div-collapsed\" : \"\")}>\n          <Router />\n        </div>\n        <GlobalFooter />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isLogin: state.userReducer.isLogin,\n    isLoading: state.uiReducer.isLoading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ startLoading, stopLoading, getTags }, dispatch)\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { loadReCaptcha } from 'react-recaptcha-google'\n// Environment Components\nimport { store, history } from 'Reducer/StoreConfig';\nimport Layout from 'View/Layout';\nimport { SnackbarProvider } from 'notistack';\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    loadReCaptcha();\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <ConnectedRouter history={history}>\n            <SnackbarProvider\n              maxSnack={5}\n              dense\n              preventDuplicate\n              autoHideDuration={2000}\n              anchorOrigin={{vertical: 'bottom', horizontal: 'right'}}>\n              <Layout/>\n            </SnackbarProvider>\n          </ConnectedRouter>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}